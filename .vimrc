""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Gvim Ubuntu用
"	最終設定日
"	2011年5月23日

"コメントは"をつけるとそこ以降はコメント扱いとなる。
"不要な設定にはコメントアウトすること

" チュートリアル
" vimtutor

"日本語ヘルプダウンロード。
"vimdoc-ja - Translate vim documents into Japanese. - Google Project Hosting
"http://code.google.com/p/vimdoc-ja/



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"事前設定
"Ubuntu 10.10 で CapsLock を Ctrl にする | a weblog by k1
"http://blog.donity.com/k1/index.php/2010/12/22/ubuntu-10-10-%E3%81%A7-capslock-%E3%82%92-ctrl-%E3%81%AB%E3%81%99%E3%82%8B/

"Caps LockキーをCtrlとして割り当てる。(Xwindow版)
"/etc/X11/Xsession.d/10setxkbmap (END) 
	"#!/bin/sh
	"setxkbmap -option ctrl:nocaps


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

".vimrcなどに設定したプラグインなどの起動時間を出力させる。
"vim --startuptime test.log
"test.logに出力される。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"helpgrep 
"	:helpgrep 検索したいキーワード
"	:helpg[rep] hogehoge

"検索結果が複数あった場合
":copen
"return で選択。
":close



"開いている全てのバッファからgrep
":bufdo vimgrepadd /hogehoge/ %




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"内部grep

":vim[grep] /hogehoge/j *.txt | cw
"これでカレントディレクトリにある
"全ての.txtファイルから「hogehoge」を検索し、
"マッチした結果がQuickFixに表示されます。

"ちなみに「ｊ」オプションは
"マッチしたファイルへ自動的にジャンプしない指定、
"そして
"| cw はマッチしたファイルがあった場合にQuickFixを開きます。

"毎回「| cw」を付けるのが面倒な場合は、以下のautocmd設定で自動化することも可能。
"au QuickfixCmdPost vimgrep cw

"QuickFixの主な操作は、
":cn #次のエラー箇所へジャンプ
":cp #前のエラー箇所へジャンプ(:cNでも同じ)
":ccl #QuickFixを閉じる
"一旦結果をクリアするときは「cexpr “”」で。

":vimgrep /hogehoge/ **/*.txt
"こうすると今度はカレントディレクトリ以下のディレクトリ内にある
".txtファイルも検索対象になります。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"QuickFix


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"コマンド＆ショートカット設定の有無

"insert
" y	ヤンク
" d カット

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"置換
":substitute 

"現在行のみが置換対象。
":s

"ファイル全体が置換対象。
":%s

":{コマンドの処理範囲}s/{置換するテキスト}/{置換後テキスト}/{オプション}
"%									ファイル全体
"{行数A},{行数B}		行数Aから、行数Bまでの範囲の行

"g			その行でマッチしたテキスト全てを置換する
"c			処理を行う前に、置換処理をするかどうかを確認する。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


" a
" b
" c
" d
" e
" f
" g
" h
" i
" j
" k
" l
" m
" n
" o
" p
" q
" r
" s
" t
" u
" v
" w
" x
" y
" z

" A
" B
" C
" D
" E
" F
" G
" H
" I
" J
" K
" L
" M
" N
" O
" P
" Q
" R
" S
" T
" U
" V
" W
" X
" Y
" Z

" CTRL + a
" CTRL + b
" CTRL + c
" CTRL + d
" CTRL + e
" CTRL + f
" CTRL + g
" CTRL + h
" CTRL + i
" CTRL + j
" CTRL + k
" CTRL + l
" CTRL + m
" CTRL + n
" CTRL + o
" CTRL + p
" CTRL + q
" CTRL + r
" CTRL + s
" CTRL + t
" CTRL + u
" CTRL + v
" CTRL + w
" CTRL + x
" CTRL + y
" CTRL + z

"        F 1
"        F 2
"        F 3
"        F 4
"        F 5
"        F 6
"        F 7
"        F 8
"        F 9
"        F 0
"        F11
"        F12

"SHIFT + F 1
"SHIFT + F 2
"SHIFT + F 3
"SHIFT + F 4
"SHIFT + F 5
"SHIFT + F 6
"SHIFT + F 7
"SHIFT + F 8
"SHIFT + F 9
"SHIFT + F 0
"SHIFT + F11
"SHIFT + F12

" CTRL + F 1
" CTRL + F 2
" CTRL + F 3
" CTRL + F 4
" CTRL + F 5
" CTRL + F 6
" CTRL + F 7
" CTRL + F 8
" CTRL + F 9
" CTRL + F 0
" CTRL + F11
" CTRL + F12







""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"vim自体の設定部分
"vim自体の設定部分
"vim自体の設定部分

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ショートカットキー
"Vimデフォルトで割り当てられていないかを確認
":h index.txt

"そのショートカットキーの定義元ファイル情報も表示
"そのショートカットキーの定義元ファイル情報も表示
"そのショートカットキーの定義元ファイル情報も表示
"そのショートカットキーの定義元ファイル情報も表示
"そのショートカットキーの定義元ファイル情報も表示
"自分またはプラグインが割り当てていないかを確認
":verbose nmap   
":verb map



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"コマンドラインでのvimコマンド補完
"ctrl+D <TAB>



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"基本的なこと

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"移動コマンド一覧
"コマンド		移動
"H					ホーム行（画面の一番上の行）にジャンプ
"M					画面の中央の行にジャンプ
"L					画面の最下行にジャンプ

"^F					1画面分順方向にスクロール
"^B					1画面分逆方向にスクロール
"^D					1/2画面分順方向にスクロール
"^U					1/2画面分逆方向にスクロール
"^E					1行分順方向にスクロール
"^Y					1行分逆方向にスクロール

"z[Enter]		カレント行が画面の一番上に表示されるようにスクロール
"z.					カレント行が画面の中央に表示されるようにスクロール
"z-					カレント行が画面の一番下に表示されるようにスクロール

"^L					画面を書きなおす



"[Enter]		次の行の1文字目にジャンプ
"+					次の行の1文字目にジャンプ
"-					前の行の1文字目にジャンプ

"0					行の先頭
"^					カレント行の空白以外の1文字目に移動
"n|					カレント行のn桁目に移動
"e					単語の末尾にジャンプ
"E					単語の末尾にジャンプ（句読点も単語の一部とみなす）
"$					行の末尾



"(					現在の文の先頭にジャンプ
")					次の文の先頭にジャンプ

"{					現在の段落の先頭にジャンプ
"}					次の段落の先頭にジャンプ

"[[					現在のセクションの先頭にジャンプ
"]]					次のセクションの先頭にジャンプ





"nG					n行目にジャンプ
"G					ファイルの末尾にジャンプ
"``					直前のマークまたは文脈に戻る
"''					直前のマークを含む行の先頭に戻る



"^G					カレント行の情報を表示（移動コマンドではない）


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"fx					カレント行の次のxに移動
"Fx					カレント行の前のxに移動
";					直前の検索コマンドを同じ方向で繰り返す
",					直前の検索コマンドを反対の方向で繰り返す
"tx					カレント行の次のxの直前に移動
"Tx					カレント行の前のxの直後に移動

"n					検索を繰り返す
"N					反対の方向で検索を繰り返す

"/pattern		パターンを順方向に検索
"?pattern		パターンを逆方向に検索
"/[Enter]		順方向に検索を繰り返す
"?[Enter]		逆方向に検索を繰り返す

"*	カーソル位置の単語を検索	下方向
"#	カーソル位置の単語を検索	上方向

":s/単語/単語/g	正規表現置換	
"&	直前の正規表現置換を繰り返す	オプションは全て無視される





""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Ctrl-l	再描画	表示が変になったときに使用





""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



"※ たとえば、[^F]と記載しているコマンドは、[Ctrl] + F のこと。
"G（Go To）コマンド
"Gは、行番号を数値引数として利用して、その行に直前するコマンド。
"たとえば、44Gなら44行目の先頭に移動する。

"``は、その間に編集作業を何もしていなければ元の位置
"（最後にGコマンドを実行した位置）に戻れる。

"編集してG以外のコマンドによってカーソルを動かした場合には、
"``は最後に編集を施した位置に戻る。

"また、検索コマンド（/や?）を実行したあとで``を使うと、
"検索を始めた位置にカーソルが戻る。

"mx	現在の位置をxでマーク
"'x	xでマークした行の1文字目にカーソルを移動
"`x	xでマークした文字にカーソルを移動

" ' => Shift+7
" ` => Shift+@

"~		大文字、小文字の変換
"~		大文字、小文字の変換
"~		大文字、小文字の変換

">>, <<
"カーソル行の右シフト、左シフト

"3>>
"は3行をシフト

">} ,<}
"カーソル行から次の段落まで右シフトまたは左シフトする



"Ctrl-a	カーソル位置の数字を 1 増やす
"Ctrl-x	カーソル位置の数字を 1 減らす

"q 文字	マクロを記録する	記録終了は q
"@ 文字	マクロを実行する


"[[					前の関数にジャンプ
"]]					次の関数にジャンプ
"%					対応する括弧"{ }","[ ]","( )"、コメント("/* */")にジャンプ
"gd					ローカル宣言にジャンプ
"gD					グローバル宣言にジャンプ
"gf					カーソル下の単語をファイル名として開く
"ga					カーソル位置の単語の文字コードを表示






""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"			■buffer（バッファ管理）
"			:ls バッファ一覧を表示
"			b buffnum 今いるwindow に特定のバッファを呼び出す
"			:bd buffnum そのバッファを削除
"			:bn 次のバッファに移動
"			:bp 前のバッファに移動



"			■register(レジスタ管理)
"			"ay 選択範囲をレジスタ a に保存
"			"ayy 今いる行をレジスタ a に保存
"			"ap レジスタ a の内容をカーソル位置にペースト
"			:reg レジスタに格納されている情報を一覧表示
"			:reg レジスタに格納されている情報を一覧表示
"			:reg レジスタに格納されている情報を一覧表示



"			■mark（マーク）
"			ma 現在のカーソル位置をマーク名 a に保存
"			'a マーク名 a の位置に移動
"			:marks マークの一覧を表示する



"			■word completion（単語補完）
"			Ctrl+p 単語補完（前方検索）
"			Ctrl+n 単語補完（後方検索）



"			■recording（操作記憶）
"			qa 操作の記録を開始し、レジスタ a に保存する
"			q 操作の記録を終了する
"			@a レジスタ a に保存された操作を再生する
"			5@a レジスタ a に保存された操作を5 回再生する



"			■外部コマンドとの連携
"			:!command 外部コマンド実行(領域指定すると出力も取込）
"			:r!command 外部コマンド実行(カーソル位置へ出力挿入)



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"折りたたみ
"よく使うコマンド
"スペース		折りたたみを展開する
"zf					選択領域を折りたたむ
"zi					折り畳みの有効無効の切り替え
"za					折り畳みの開け閉め
"zd					折り畳みを削除する

"時々使うコマンド
"zA					折り畳みの開け閉め（再帰）
"zD					折り畳みを削除する（再帰）
"zE					全ての折り畳みを削除


"折りたたみに関する操作
"zc/zC       折り畳みを閉じる。Cだと再帰的に閉じる
"zo/zO       折り畳みを開く。Oだと再帰的に開く
"zm/zM       全ての折り畳みを閉じる。mだと開いている一番下の折り畳みを閉じる
"zR/zr       全ての折り畳みを開く。Rだと閉じている一番上の折り畳みが開く




"一般設定
"折り畳みの種類の切り替えとか
"set foldmethodで指定できる折り畳み方法
"set foldmethod=manual	手動
"set foldmethod=marker	マーカー
"set foldmethod=indent	インデント
"set fdc=0	折り畳みカラム幅の設定

"manual     手動でfold レベルをきめる
"indent     インデントの数をfold レベルにする
"expr       foldを定義する式を指定する
"syntax     構文強調によりfoldを定義する
"diff       変更されていないテキストをfoldとする
"marker     テキスト中の印でfoldを定義する 

"ruby用 折りたたみ設定 （Pythonでも利用可能？）
"set foldmethod=indent
"set fdc=0



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"# {{{ や #}}} などとしても折り畳みが適用されるようにしたい。
"折り畳み設定はデフォルトでは// や /* */ などのC言語的なコメントにしか適用されない。 そこでシャープ(#)のみがコメントとするような言語では、以下の様にして設定を加える 必要がある。

"set commentstring=;#%s        "HTML言語のコメント形式
"set commentstring=/*%s*/      "C言語のコメント形式
"set commentstring=\%%s        "texのコメント形式
"set commentstring=            "コメントなし
"以下の様にファイルにvimの設定を記述していると例えばPerlの様に
"#がコメントとなる記述で利用することができます。

"フォルドレベルを指定する
":set foldnestmax=3       fold のネストレベルを3にする
":set fdn=1               fold のネストレベルを1にする




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"ソースが折りたたまれている。
"【Vim】ソースコードを折り畳んで表示する - blog.remora.cx
"http://blog.remora.cx/2011/01/folding-sources-on-vim.html

"'foldmethod' オプションをモードラインで使う

"モードラインとは？
"ファイルタイプ別ではなくファイルごとにエディタの設定を変更したい場合、
"ファイルに vim エディタ特有の記述をしておくことで、
"そのファイルが vim エディタで開かれた時に
"特定の設定を有効にするモードラインという機能が役に立ちます。
"http://nanasi.jp/articles/howto/file/modeline.html


"Vim-users.jp - Hack #170: テキストを折り畳む – 基本編
"http://vim-users.jp/2010/08/hack170/

"マーカー文字列を埋め込んで、ソースコードを折り畳み表示する — 名無しのvim使い
"http://nanasi.jp/articles/howto/fold/fold-marker.html








""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"今までの9回分の削除内容は、番号付きのバッファに保存されている。
"最後の削除内容はバッファ1に、その前の削除内容はバッファ2に
"というように保存されている。

"たとえば、バッファ2に入っている削除内容を復元するには、
"「2p」とタイプすると、バッファ2の内容がカーソルのあとに挿入される。

"「"dP」：バッファdの内容をカーソルの前に挿入
"「"ap」：バッファaの内容をカーソルのあとに挿入
"なお、バッファ名を大文字で指定すると、
"ヤンクしたり削除したりしたテキストがそのバッファの現在の内容の末尾に追加される。

"mx				現在の位置をxでマーク
"'x				xでマークした行の1文字目にカーソルを移動
"`x				xでマークした文字にカーソルを移動
"``				直前のマークまたは文脈の位置に戻る
"''				直前のマークまたは文脈のある行の先頭に戻る





""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""






""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" スペースもマッピングされるためコメントは横に記述しません。
" nmap     ノーマルモードのキーマップ
" nnoremap ノーマルモードのキーマップ (ただし再帰的にキーマップを追いません)
" imap     インサートモードのキーマップ
" inoremap インサートモードのキーマップ (ただし再帰的にキーマップを追いません)



"空のマップを作るには {rhs} に "<Nop>" を指定する方法が簡単です。これは |<>| 表
"記を使えるようにしていれば動作します。
"例えば、ファンクションキー 8 は何もしない、としたい場合は次のようにします。
"        :map  <F8>  <Nop>
"        :map! <F8>  <Nop>

"実行するコマンドがコマンドラインに表示されないようにする
"例:
"        :map <silent> ,h /Header<CR>


"<C-O>を押すと一時的に ノーマルモードに移行します。

"増減したい数字の上で
"<C- a>を押すと増加
"<C-x>で減少(unite-rails)

"プログラムを編集中に便利な移動コマンドです。
"コマンド	意味
"[[	前の関数にジャンプ
"]]	次の関数にジャンプ
"%		対応する括弧"{ }","[ ]","( )"、コメント("/* */")にジャンプ
"gd	ローカル宣言にジャンプ
"gD	グローバル宣言にジャンプ
"gf	カーソル下の単語をファイル名として開く
"ga	カーソル位置の単語の文字コードを表示



"<S-...>	Shift キーとの同時押し
"<C-...>	Control キーとの同時押し
"<M-...>	Alt キー、もしくは Meta キーとの同時押し
"<A-...>	Alt キー、もしくは Meta キーとの同時押し
"<D-...>	Command キーとの同時押し（Mac OSX環境）
"例えば、「<C-r>」と表記された場合は、 
"Control キーと r キーを同時押しすることを表現している、 

"<silent>
"コマンドラインへの出力を抑制します。キーマッピングからコマンドを実行する場合などに指定します。

"<unique>
"すでにマッピングが存在する場合、エラーにします。通常は上書きされます。

"<buffer>
"バッファローカルなキーマッピングを定義します。

"<expr>
"マップ先の文字列を Vim の式とみなして、評価した結果の文字列をマップ先とします。

"<expr> 実行コマンドが入る。
"<expr> 実行コマンドが入る。
"<expr> 実行コマンドが入る。
"<expr> 実行コマンドが入る。
"<expr> 実行コマンドが入る。
"<expr> 実行コマンドが入る。
"<expr> 実行コマンドが入る。
"<expr> 実行コマンドが入る。
"<expr> 実行コマンドが入る。
"<expr> 実行コマンドが入る。
"<expr> 実行コマンドが入る。
"<expr> 実行コマンドが入る。
"<expr> 実行コマンドが入る。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"1 つの vimrc で複数の環境に対応できます。
"if has('win32')
"  " Windows 用の設定
"endif
"
"if has('win32unix')
"  " Cygwin 用の設定
"endif
"
"if has('gui_running')
"  " GUI 用の設定
"endif



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"自分やプラグインで設定したものは
" :map

" :nmap
" :nnoremap

" :imap
" :inoremap

" :cmap


" どこで指定したか?
" 場所を知りたい場合。
" :verb map

"デフォルトの割り当て
":h index.txt 

" v で選択。
"  :'<,'>w TEST 


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" <C-G>    位置とファイルの情報
" %        対応するカッコに移動する。
" R        matomete okikae


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"map一覧をテキストに表示。
":mkexrc

":help間の移動
"<C-]> キーワードにジャンプし、
"<C-t> 前に戻る

"ヘルプタグを更新した場合の、タグを再設定。
":helptags ~/.vim/doc



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"移動
"Vim再入門
"http://www.slideshare.net/bleistift/vim-8362118

"j k
"w b e ge
"f t F T ; ,
"t)
"gg G 0 ^ $
"h l は使わないようにする。

"a A i I gi o O
"s S c C

"10a=
"132gg 132G
"10.

"de
"d+)
"d<C-v>}

"ye
"y+)
"y<C-v>}



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"vundle設定（プラグイン一括管理）
"vundle設定（プラグイン一括管理）
"vundle設定（プラグイン一括管理）

"プラグイン指定方法
"vim-scriptsからなら（レポジトリ名）
"Bundle 'repos'

"Githubからなら（ユーザー名/レポジトリ名）
"Bundle 'user_name/repos'
"Search - GitHub
"https://github.com/search

"githubじゃないレポジトリからは
"Bundle 'git://git.foo.com/repos.git'


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"keymap (basic)
"keymap (basic)
"keymap (basic)
"keymap (basic)
"keymap (basic)
"keymap (basic)

"絞込みテキストを入力するごとに表示される候補の更新間隔を制御する。単位はミリ秒
let g:unite_update_time = 1000

"Vim: <LocalLeader>の設定 - while ("im automaton");
"http://whileimautomaton.net/2007/04/19221500

"mapleaderマニュアル
":help mapleader

:let mapleader=","
":let maplocalleader=","

"<Leader><Leader>で変更があれば保存
noremap <Leader><Leader> :up<CR>




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Ctrl-iでヘルプ
"(ヘルプを用意しておく必要がある。)
nnoremap <C-i>  :<C-u>help<Space>
" カーソル下のキーワードをヘルプでひく
nnoremap <C-i><C-i> :<C-u>help<Space><C-r><C-w><Enter>



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"コンマの後に自動的にスペースを挿入
inoremap , ,<Space>
"inoremap <Space> <C-r>=strpart(getline("."),col(".")-3,2)==", "?"":" "<CR>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle
"Bundle



filetype off

set rtp+=~/.vim/bundle/vundle/ 
call vundle#rc()

Bundle 'vundle'

"install方法
".vimrcにプラグインを記入
":BundleInstall

"プラグインアップデート方法
":BundleInstall!



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""git

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Hack #219
"Hack #219
"Hack #219
"Vim-users.jp - Hack #219: Gitを使う2 – Fugitive.vim
"http://vim-users.jp/2011/06/hack219/

Bundle 'tpope/vim-fugitive'

":help fugitive 
":help fugitive 
":help fugitive 
":help fugitive 
":help fugitive 
":help fugitive 
":help fugitive 
":help fugitive 
":help fugitive 
":help fugitive 
":help fugitive 



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"コマンド比較。
"git							fugitive		action
":Git add %				:Gwrite			Stage the current file to the index
":Git checkout %	:Gread			Revert current file to last checked in version
":Git rm %				:Gremove		Delete the current file and the corresponding Vim buffer
":Git mv %				:Gmove			Rename the current file and the corresponding Vim buffer
" %は現在のバッファという意味。

":Gdiff[ rev]: 		git diff[ --cached] {編集中のファイル}
":Gstatus: 				git status
":GlLog[ rev]: 		git log {編集中のファイル}
":Gwrite: 				git add {編集中のファイル}
":Gread[ rev]: 		git checkout {編集中のファイル}
":Gcommit: 				staged なファイルがあれば git commit なければ git status
":Gblame[ rev]: 	git blame {編集中のファイル}



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"VimmerなGit使いはfugitive.vimを今すぐ入れたほうがいい - SELECT * FROM life;
"http://d.hatena.ne.jp/yuku_t/20110427/1303868482
"VimmerなGit使いはfugitive.vimを今すぐ入れたほうがいい - SELECT * FROM life;
"http://d.hatena.ne.jp/yuku_t/20110427/1303868482
"VimmerなGit使いはfugitive.vimを今すぐ入れたほうがいい - SELECT * FROM life;
"http://d.hatena.ne.jp/yuku_t/20110427/1303868482

"コマンド早見表
"これらのコマンドは全てgitリポジトリ内でのみ操作可能。
":Gstatus		"新しい窓を作ってgit statusを表示
":Gwrite		"現在開いているソースをgit add
":Gread			"現在開いているソースの直前のコミット時のソースを表示
":Gremove		"現在開いているソースをgit rmする
":Gcommit		"git commit
":Gblame		"現在のソースをgit blame。vimが色づけしてくれる
":Gdiff			"現在のソースの変更点をvimdiffで表示
":Gmove destination/path		"現在開いているソースをgit mvする
"この他にもいくつかコマンドがあるので、:help fugitiveを実行していただきたい。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Gstatus
"Gstatus
"Gstatus
":Gstatus を使用すると、Window が split され git status の結果が表示されます。
"定義されたいくつかの mapping を利用することで、更に便利になります。

"まず、カーソルを目的のファイルがある行に合わせる。
"D: 		Gdiff起動 差分表示			git diff[ --cached]
"-: 		add orアンステージ			git add もしくは reset
"p: 		パッチ表示							git add -p
"Enter	ファイル表示
"C: 		コミット								git commit
": 			カーソル下にあるファイルを edit



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gwrite
":Gwrite
":Gwrite

":Gwriteは引数にgit-addしたいファイルへのパスを設定できる。
"省略したら現在開いているファイルが対象となる。

"Fugitive.vimで指定するパスが

"相対パスだった場合
"現在のディレクトリから設定される。

"絶対パスの場合
"リポジトリのホームディレクトリから設定される。
"(ファイルシステムのホームディレクトリではない)

":Gwqを使うと:Gwriteしたあとに:wqが呼ば保存され終了。


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gread
":Gread
":Gread
"現在開いているソースの直前のコミット時のソースを表示してくれる。
"表示されたファイルは上書きされているのではなく、バッファに展開されているだけ。

"revisionも指定できるので1つ前のコミット時の様子をみたければ:Gread HEAD^でいける。
"現在との差分を表示したい場合は：Gdiffを使う。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gremove
":Gremove
":Gremove
"引数でパスが与えられたファイルをgit-rmする。
"パスが省略された場合は現在開いているファイルがgit-rmされる。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gmove
":Gmove
":Gmove
"Gmove destination/pathと指定することによって、開いているファイルをgit-mvする。
"パスは現在のディレクトリからの相対パスか、
"リポジトリホームからの絶対パスで指定できる。
"/で始まると絶対パスになる。

"移動した後は自動的に移動した後のファイルを開いてくれる。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gdiff
":Gdiff
":Gdiff
":Gdiffは現在開いているファイルに加えられた変更をvimdiffでみせてくれる。
"しかも、引数にrevisionを指定できる。
"たとえばmasterブランチとの差分をみたいなら：Gdiff masterだ。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gblame
":Gblame
":Gblame
"ソースの変更箇所が、どのハッシュで登録されているかが分かる。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":Gbrowse
":Gbrowse
":Gbrowse
"ブラウザでgithubからみれる。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"筆者は以下のように mapping して利用しています。
" for Fugitive {{{
nnoremap <Space>gd :<C-u>Gdiff<Enter>
nnoremap <Space>gs :<C-u>Gstatus<Enter>
nnoremap <Space>gl :<C-u>Glog<Enter>
nnoremap <Space>ga :<C-u>Gwrite<Enter>
nnoremap <Space>gc :<C-u>Gcommit<Enter>
nnoremap <Space>gC :<C-u>Git commit --amend<Enter>
nnoremap <Space>gb :<C-u>Gblame<Enter>
" }}}



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Hack #67
"Hack #67
"Hack #67
"Vim-users.jp - Hack #67: Gitを使う
"http://vim-users.jp/2009/09/hack67/

"Bundle 'motemen/git-vim'

"let g:git_no_map_default = 1
"let g:git_command_edit = 'rightbelow vnew'
"nnoremap <Space>gd :<C-u>GitDiff --cached<Enter>
"nnoremap <Space>gD :<C-u>GitDiff<Enter>
"nnoremap <Space>gs :<C-u>GitStatus<Enter>
"nnoremap <Space>gl :<C-u>GitLog<Enter>
"nnoremap <Space>gL :<C-u>GitLog -u \| head -10000<Enter>
"nnoremap <Space>ga :<C-u>GitAdd<Enter>
"nnoremap <Space>gA :<C-u>GitAdd <cfile><Enter>
"nnoremap <Space>gc :<C-u>GitCommit<Enter>
"nnoremap <Space>gC :<C-u>GitCommit --amend<Enter>
"nnoremap <Space>gp :<C-u>Git push


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Bundle 'git-commit'




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""Ruby
Bundle 'vim-ruby/vim-ruby'
Bundle 'rubycomplete.vim'
Bundle 'thinca/vim-quickrun'



"Rubyで自動的にendをいれてくれる、カーソルを良い位置に移動してくれる。
Bundle 'tpope/vim-endwise'



"vimでコードの折りたたみ( fold )をイケてる感じにする。 - t9mdの日記
"http://d.hatena.ne.jp/t9md/20101028/1288271851
"Commit 372949f490faa34e5fd480041c48fc92a68746df to t9md/vim-foldtext - GitHub
"https://github.com/t9md/vim-foldtext/commit/372949f490faa34e5fd480041c48fc92a68746df
Bundle 't9md/vim-foldtext'



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"囲む （surround）
"doc/surround.txt at master from tpope/vim-surround - GitHub
"https://github.com/tpope/vim-surround/blob/master/doc/surround.txt
Bundle 'tpope/vim-surround'

" . で前回のコマンドを繰り返せる。
Bundle 'tpope/vim-repeat'

"エラーがでるのでコメントアウト
"astashov/vim-ruby-debugger - GitHub
"https://github.com/astashov/vim-ruby-debugger
"Bundle 'astashov/vim-ruby-debugger'

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"vim の text-object をより便利に使えるプラグイン - surround.vim - 川o・-・）
"http://d.hatena.ne.jp/secondlife/20061225/1167032528
"vim plugin （プラグイン） surround.vim の使い方メモ : Serendip - 
"http://www.serendip.ws/archives/997




"			c			チェンジ
"			d			デリート
"			dst		タグ
"			s			囲み
"			
"			
"			
"			ys
"			テキストオブジェクトに対して cs の効果を与える。
"			yss
"			カレント行に対して cs の効果を与える。
"			
"			
"			"単語を"で囲む
"			"	ysiw"
"			" ysw "ys wワードを囲む。
"				ysiw)
"			yssB
"			カレント行を { } で囲む。
"			ysst
"			カレント行をタグで囲む。
"			ysst<p>
"			カレント行を <p> タグで囲む。
"			ySSt
"			カレント行をタグで囲む（インデントする）
"			
"			
"			
"			ds"
"			
"			
"			置換
"			左の囲いを指定した場合にはスペースを与える。
"			右の囲いを指定した場合にはすぐ隣に囲う。
"			cs]) 
"			cs([
"			cs)]
"			
"			cs"<q>
"			cst<p>
"				テキストオブジェクトを囲むタグを <p> タグで囲むように置換する。
"				<div>Hello World!</div>
"				↓
"				<p>Hello World!</p>
"			
"			
"			dst
"				<h1>Hello World!</h1>
"				↓
"				Hello World!



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"refe
"gemでインストール後
"Rubyリファレンス
Bundle 'thinca/vim-ref'
"Bundle 'lookupfile'
"Bundle 'genutils'


"Vimでref.vimを使ってRubyのリファレンスをただちに検索する - アインシュタインの電話番号☎
"http://d.hatena.ne.jp/ruedap/20110426/vim_ref_plugin_ruby_reference_search_tool_refe2



"英和
"Vimでref.vimを使って英辞郎で英単語をただちに検索する - アインシュタインの電話番号☎
"http://d.hatena.ne.jp/ruedap/20110427/vim_ref_plugin_alc_eijiro_english_dictionary_search



"refe関連 不明
"リファレンスをインクリメンタルサーチする
"lookupfile.vim(v 1.4) (genutils.vimに依存)
"genutils.vim(v 2.4) 
"lookupfileをインストールするとエラーが表示される。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"rails
Bundle 'tpope/vim-rails'

"basyura/unite-rails - GitHub
"https://github.com/basyura/unite-rails
Bundle 'basyura/unite-rails'

Bundle 'project.tar.gz'

Bundle 'tpope/vim-haml'

Bundle 'tpope/vim-cucumber'
"ジャンプ CTRL -]

Bundle 'snipMate'



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"補完
Bundle 'Shougo/neocomplcache'



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"vimshell

"30秒で MacVim に VimShell を入れる最速の方法 | ウェブル
"http://weble.org/2011/01/08/macvim-vimshell
"vimshellが便利過ぎる件 - ぷろぐらま はっくす
"http://d.hatena.ne.jp/nauthiz/20101107/1289140518
"vimprocディレクトリで
"(unix) no baai.
"make -f make_gcc.mak
"とコンパイルして、
"コンパイルしたファイルをautoloadにコピー


"Bundle 'Shougo/vimshell'


" ,is: シェルを起動
"nnoremap <silent> <Leader>is :VimShell<CR>
" ,ipy: pythonを非同期で起動
"nnoremap <silent> <Leader>ipy :VimShellInteractive python<CR>
" ,irb: irbを非同期で起動
"nnoremap <silent> <Leader>irb :VimShellInteractive irb<CR>
" ,ss: 非同期で開いたインタプリタに現在の行を評価させる
"vmap <silent> <Leader>ss :VimShellSendString<CR>
" 選択中に,ss: 非同期で開いたインタプリタに選択行を評価させる
"nnoremap <silent> <Leader>ss <S-v>:VimShellSendString<CR>



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"vimproc
"Bundle 'Shougo/vimproc'
"let g:vimproc_dll_path = $VIMRUNTIME . '/autoload/proc.so'



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ファイラー
Bundle 'Shougo/unite.vim'
Bundle 'tsukkee/unite-help'
Bundle 'Shougo/vimfiler'


"uniteのプラグイン

"unite-grep.vimが使えました - bettamodokiのメモ
"http://d.hatena.ne.jp/bettamodoki/20110513/1305275171
"Bundle 'Sixeight/unite-grep'

"パターンを入力すると一覧でとれる 
"nnoremap <silent> <Leader>ug :Unite grep:%:-iHRn<CR>

"grepは見つかった行数を出力するように、-Hnを付けないといけません。
"let g:unite_source_grep_default_opts = '-iRHn'



"vimfiler 
let g:vimfiler_as_default_explorer = 1








""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"コメントアウト
"\c<Space> でできる。その他のオプション多数。
Bundle 'The-NERD-Commenter'
"Bundle 'scrooloose/nerdcommenter'

"nonGUIde kurippubo-do
"Bundle 'fakeclip'
Bundle 'kana/vim-fakeclip'

"Bundle 'commentout'






""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"バックアップファイルを世代別に作成する
Bundle 'savevers.vim'



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"vimの正規表現をrubyの正規表現のように使う。。
Bundle 'eregex.vim'



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"コードレイアウトの自動化
"高性能なテキスト整形ツールAlignの使い方 
"#1 インストールから設定まで — 名無しのvim使い
"http://nanasi.jp/articles/vim/align/align_vim.html
"#2 組み込みマッピングでテーブル構造を整形する
"http://nanasi.jp/articles/vim/align/align_vim_mapt.html
"#3 組み込みマッピングでプログラムのソースを整形する
"http://nanasi.jp/articles/vim/align/align_vim_mapa.html
"#4 「:Align」コマンドを使用して整形処理を行う
"http://nanasi.jp/articles/vim/align/align_vim_ctrl.html
"#5 ここまで紹介していない残りの機能の紹介
"http://nanasi.jp/articles/vim/align/align_vim_ext.html
"#6 Alignの使い方を簡潔に説明
"http://nanasi.jp/articles/vim/align/align_vim_summary.html

"日本語が入るとうまく整形できない。
Bundle 'Align'

"日本語環境用の設定
"かなり綺麗に整形できる。
:let g:Align_xstrlen = 3



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Align解説

" 整列
" 範囲選択整形は、範囲選択した範囲内でのみ整形される。
"\t=
"\T=

"\t|
"\T|

"\t:
"\T:

"複数のセパレーターを指定したい場合。
":%:Align , = + -


" コメントのみを整列させたいならば 
"\acom

":Align ,

"実行例
"# Ctrl+Vで選択後、":Align =>"
"# Crtl+Vで選択後、":Align |"



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"<Leader>tsp	空白文字で分割して整形。各フィールドは左揃え。
"<Leader>Tsp	空白文字で分割して整形。各フィールドは右揃え。
"<Leader>tsq	空白文字で分割して整形。ダブルクォートで囲まれたフィールドをサポート。
"各フィールドは左揃え。



"<Leader>tab	TSVの整形。タブ文字で分割して整形。タブ文字は半角スペースに変換される。
"<Leader>t{セパレータ}	指定したセパレータで分割して整形。各フィールドは左揃え。
"<Leader>T{セパレータ}	指定したセパレータで分割して整形。各フィールドは右揃え。
"各フィールドを区切るセパレータを自分で指定することもできます。 
"指定できるのは、「,」「:」「<」「=」「@」「|」の6種類です。 


"<Leader>tml	行末のバックスラッシュの位置の整形。シェルスクリプト用。
"<Leader>Htd	HTMLのテーブルの整形。
"<Leader>tt		LaTexのテーブルの整形。



"実行例
"ma						マークa
"<Leader>tsp	空白文字で区切られた各フィールドの位置を調節したい


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"プログラム
"2種類の方法
	"ビジュアルモードで範囲を指定する方法
	"「a」のマークを使用する方法


"<Leader>a,	複数の変数を一度に宣言していたら、その宣言を1行ずつの変数宣言に変換する。
"<Leader>adec	C言語の変数宣言の整形。
"<Leader>adef	C言語のdefine定義の整形。
"<Leader>a?	C言語の3項演算子の整形。
"<Leader>a<	「<<」「>>」と入出力パラメータの整形。
"<Leader>a=	「:=」の整形。
"<Leader>acom	C言語のコメントの整形。
"<Leader>aocom	C言語のコメントの整形。
"コメントの先頭揃え位置をなるべく前方の位置にする。
"<Leader>ascom	C言語のコメントの整形。コメントで始まる行の先頭位置は
"他のコメントの先頭位置と合わせない。
"<Leader>abox	選択行をC言語風のボックスコメントで囲む。
"<Leader>anum	小数点の位置で数値を整形。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

":AlignCtrl コマンドのフォーマット
"#4 「:Align」コマンドを使用して整形処理を行う
"http://nanasi.jp/articles/vim/align/align_vim_ctrl.html

" 「:AlignCtrl」コマンドの書式
":AlignCtrl {整形処理の条件} [{セパレータ1}] [{セパレータ2}] [{セパレータ3}] ....

"設定例
" パターン1 一度に全ての条件指定
":AlignCtrl l=p0P2 ,

" パターン2 二度に分けて条件を指定
":AlignCtrl l= ,
":AlignCtrl p0P2

" パターン3 四度に分けて整形の条件指定
":AlignCtrl l
":AlignCtrl = ,
":AlignCtrl p0
":AlignCtrl P2



"「:AlignPush」「:AlignPop」コマンドは、
"「:AlignCtrl」コマンドで設定した整形の条件を
"	記録するコマンド
"	取り出すコマンドです。


":AlignCtrl」で変更した設定を初期状態に戻す
:command! -nargs=0 AlignReset call Align#AlignCtrl("default")

"このコマンドの設定を追加した後、
"「:AlignReset」コマンドを実行すると、
"「:AlignCtrl」コマンドで変更したAlignの整形の設定が
"初期状態にクリアされます。

" 設定のリセット
":AlignReset



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""







""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""










""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""











""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"python関連vimプラグイン
Bundle 'python.vim' 


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Rsense関連vimプラグイン
"インストールが難しい。

"m2ym/rsense - GitHub
"https://github.com/m2ym/rsense
"RSense - EmacsやVimなどに特化したRubyのための優れた開発援助ツール
"http://cx4a.org/software/rsense/index.ja.html
"RSense - ユーザーマニュアル
"http://cx4a.org/software/rsense/manual.ja.html

"Bundle 'm2ym/rsense' 

"let g:rsenseHome="/home/hi/.vim/bundle/rsense"



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"探す

"便利そうだけど不明
"Bundle 'ZenCoding.vim'
"Bundle 'h1mesuke/unite-outline'
"Bundle 'kana/vim-fakeclip'

"Bundle 'kana/vim-fakeclip'



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"colorschmes
"~/.vim/colors にインストール。

Bundle 'railscasts' 
Bundle 'Diablo3' 
Bundle 'molokai' 
Bundle 'billw.vim' 
Bundle 'Wombat' 
"Bundle 'Wombat256.vim' 



"現在使用中
"いい感じrubyもよく見える

"vim you
colorscheme hi

"gvim you
"colorscheme railscasts



"	*gui-colors*
"推奨されている色名 (これらはほとんどのシステムで利用可能である)
"Red			LightRed			DarkRed
"Green		LightGreen		DarkGreen		SeaGreen
"Blue			LightBlue			DarkBlue		SlateBlue
"Cyan			LightCyan			DarkCyan
"Magenta	LightMagenta	DarkMagenta
"Yellow		LightYellow		Brown				DarkYellow
"Gray			LightGray			DarkGray
"Black		White
"Orange		Purple				Violet




"カラースキーマ — 名無しのvim使い
"http://nanasi.jp/colorscheme.html

"vim/gvimの色設定について - fudist
"http://sites.google.com/site/fudist/Home/vim-nihongo-ban/vim-color

"カラースキーマ名

"全く駄目。見た目も駄目。
"colorscheme shine
"colorscheme morning
"colorscheme blue
"colorscheme default
"colorscheme desert
"colorscheme elflord
"colorscheme peachpuff
"colorscheme ron
"colorscheme slate

"中途半端
"colorscheme darkblue
"colorscheme pablo
"colorscheme evening
"colorscheme zellner


"試して駄目だったもの。
"青文字のディレクトリが見づらい。
"colorscheme delek

"これらの中から選択。
"colorscheme torte
"colorscheme murphy

"rubyがきっちり分けられているがピンク主体。
"colorscheme koehler

"ダウンロード設定ファイル
"設定ファイルの拡張子.vimは不要

"あんまり良くない。
"colorscheme h2u_black

"rubyでほとんど色分け無し、使えない
"colorscheme vitamins

"黄色主体
"colorscheme desert

"シンプルな感じ、rubyの設定有り
"colorscheme ir_black



"pop ga midurai
"colorscheme molokai

"colorscheme Diablo3

"colorscheme railscasts



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ない



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"不要

"Bundle 'vimwiki'
"Bundle 'YankRing.vim'
"Bundle 'newspaper.vim'
"Bundle 'xoria256.vim'

"Bundle 'migemo'
"Bundle 'qfixhowm'
"Bundle 'changed'
"Bundle 'mru'
"Bundle 'yankring'
"Bundle 'incbufswitch'
"Bundle 'bufexplorer'
"Bundle 'vcscommand'


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"一日一回のプラグインアップデート。
"Vimプラグインの管理をVundleにしてみた | cloudrider.net
"http://cloudrider.net/vim%E3%83%97%E3%83%A9%E3%82%B0%E3%82%A4%E3%83%B3%E3%81%AE%E7%AE%A1%E7%90%86%E3%82%92vundle%E3%81%AB%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F/

if has('unix')
    if system("uname") == "Darwin\n" | let ismac=1 | endif
endif
 
if has('mac') || exists('ismac')
    if system("ls -l ~/.viminfo | sed -e 's/.* \\(.\\{2\\}\\) \\(.\\{2\\}\\) [0-9]\\{2\\}:[0-9]\\{2\\}.*/\\1\\2/'") != strftime("%b%e\n", localtime())
        autocmd VimEnter * :BundleInstall!
        call system("touch ~/.viminfo")
    endif
    unlet ismac
elseif has('unix')
    if system("ls -l ~/.viminfo | sed -e 's/.*\\([0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\}\\).*/\\1/'") != system("date +%Y-%m-%d")
        autocmd VimEnter * :BundleInstall!
        call system("touch ~/.viminfo")
    endif
endif




"Bundle設定終了
"Bundle設定終了
"Bundle設定終了


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"filetype を一度offにして、
"Vundle の処理のあとで
"ftpluginとindent を読み込むように指定。

"compatible の機能をオフにします。
"compatible のオプションを有効にすると、Vimの便利な機能が使えなくなる。 初期値：オン
set nocompatible

"ファイル形式の検出を有効化
filetype on

"ファイル形式別インデントのロードを有効化
filetype indent on

"ファイル形式別プラグインのロードを有効化
filetype plugin on



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"vim個別設定

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"フリーカーソル
"set virtualedit=all



"Vim-users.jp - Hack #195: virtualedit tip
"http://vim-users.jp/2011/01/hack195/

"フリーカーソル設定時にペーストする場合、
"行末より左にカーソルがあったとき、詰めてペーストしてくれる。
if has('virtualedit') && &virtualedit =~# '\<all\>'
    nnoremap <expr> p (col('.') >= col('$') ? '$' : '') . 'p'
endif



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

".vimrc - サンプル設定 - fudist
"http://sites.google.com/site/fudist/Home/vim-nihongo-ban/-vimrc-sample

"ファイルの上書きの前にバックアップを作る/作らない
"set writebackupを指定してもオプション 'backup' がオンでない限り、
"バックアップは上書きに成功した後に削除される。
set nowritebackup
"バックアップ/スワップファイルを作成する/しない
set nobackup
"set noswapfile



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"再読込、vim終了後も継続するアンドゥ(vim7.3)
"アンドゥの保存場所(vim7.3)

"ファイルと同じディレクトリに .vimundo と言うディレクトリがあったら
"そのディレクトリへ、なければ ~/.vimundo へ保存する
set undodir=./.vimundo,~/.vimundo
"set undodir=.

"Persistent undoを有効化(vim7.3)
"全てのファイルで有効に
set undofile



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"キーコードやマッピングされたキー列が完了するのを待つ時間(ミリ秒)
set timeoutlen=3500




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート
"vim の個別セッテイング パート

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"シンタックスの色付けをデフォルトでOnにする
if &t_Co > 1
	syntax enable
endif

"強調表示(色付け)のON/OFF設定。
syntax on



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"基本設定
"文字コード指定
set encoding=utf-8
set fileencoding=utf-8 
"set fileencodings=iso-2022-jp,euc-jp,utf-8,ucs2le,ucs-2 
"set fileformats=dos,unix,mac
"set fileencodings=sjis,iso-2022-jp,euc-jp

" OSのクリップボードを使用する
set clipboard+=unnamed
" ヤンクした文字は、システムのクリップボードに入れる"
set clipboard=unnamed





""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"行番号の表示
set number

"モード表示
set showmode

"タイトル表示
set title

"ルーラー表示
set ruler




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"前回参照行
autocmd BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal g`\"" | endif

"コマンド表示
set showcmd



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ステータス行を表示
set laststatus=2


""ステータス行の指定
set statusline=%f%<%m%r%h%w\ %y%<%{'['.(&fenc!=''?&fenc:&enc).':'.&ff.']'}%=%<<%l/%L>,[%c%V]%6P\ %{fugitive#statusline()}\ 




""ステータス行の指定
"左端1	ファイル名 
"set statusline=%m%<%f\ %h%r
"左端2	GITレポジトリ
"set statusline+=%{fugitive#statusline()}\ 
"左端4	ファイルタイプ
"set statusline+=%y
"左端5	ステータス行に文字コードと改行コード表示
"set statusline+=%<%{'['.(&fenc!=''?&fenc:&enc).':'.&ff.']'}

"右端		行数、カーソル位置
"set statusline+=%=<%l/%L>,[%c%V]%6P





"以前の設定
"set statusline=%y%<%{'['.(&fenc!=''?&fenc:&enc).':'.&ff.']'}%f%m%r%h%w%=<%l,%c%V>%6p%%






"set statusline=  	設定
"set statusline+=		追加設定	

"\  - \とスペースでスペースを置ける。  
"%< - 行が長すぎるときに切り詰める位置
"%f - ファイル名（相対パス）
"%F - ファイル名（絶対パス）
"%t - ファイル名（パス無し)
"%y - ファイルタイプ

"%m - 修正フラグ （[+]または[-]）
"%r - 読み込み専用フラグ（[RO]）
"%h - ヘルプバッファ
"%w - preview window flag

"%{'['.(&fenc!=''?&fenc:&enc).']['.&fileformat.']'} - fileencodingとfileformatを表示

"%= - 左寄せと右寄せ項目の区切り（続くアイテムを右寄せにする）
"%l - 現在のカーソルの行番号
"%L - 総行数
"%c - column番号
"%V - カラム番号


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"vim上でマウスが使える
"遠隔操作時につかう。
"画面分割の広さをマウスで変えられる。
set mouse=a

"puttyでマウスを使う
"puttyでの screen対応
"この設定を使うと補完候補をタブキーで選べなくなる
"set ttymouse=xterm2



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"history履歴
set history=1000000

"undo履歴
set undolevels=1000000



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"バックアップ作る
set backup
"バックアップを作らない
"set nobackup

"バックアップディレクトリ
set backupdir=$HOME/.vim/backupfiles

"バックアップファイル名をFILE.bakに指定する。
set backupext=.bak

"swapファイルを作らない"
"set noswapfile



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" savevers.vim 
" savevers.vim 
" savevers.vim 

"Vimの使い方－Tips
"バックアップファイルを世代別に作成する
"http://www15.ocn.ne.jp/~tusr/vim/vim_text2.html

" savevers.vim バックアップファイルの設定" savevers.vimのためにパッチモードにします
set patchmode=.clean



" カンマで区切られたバックアップを作成するファイル名です "*.c,*.h,*.vim"
"全部
let savevers_types = "*"

"バージョンの管理をするファイルの種類
"let savevers_types = "*.rb,*.py"
"let savevers_types = "*.rb,*.py,*.java,*.xml,*.,*.,*.,*."



" バックアップファイルが書き込まれるディレクトリです 
"オプション"backupdir"と同じディレクトリ
let savevers_dirs = &backupdir



" バックアップファイルとの比較でウィンドウのサイズを変更する場合は0
let versdiff_no_resize=1

" ウィンドウのサイズを変更する場合にどれだけの幅までを許可するか
"let versdiff_no_resize=80

":Purgeでカレントファイルの全てのバックアップを削除
let savevers_purge = 0

"全ての履歴ファイルを消去には、
":Purge -a 0



"各バージョンとのdiffを表示する時に、ウィンドウサイズを変化させるかどうか。
"Diff表示の際にウィンドウをリサイズしない
let versdiff_no_resize = 1

"versdiff_no_resizeのオプションで、
"ウィンドウサイズの変化を許している時に、
"どれくらいの幅まで許容するか。
let versdiff_no_resize=120




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"検索
"検索
"検索

"検索語を画面中央に
nmap n nzz
nmap N Nzz
nmap * *zz
nmap # #zz
nmap g* g*zz
nmap g# g#zz

"検索結果文字列をハイライト
set hlsearch

"検索文字列が小文字の場合は大文字小文字を区別なく検索する。
set ignorecase

"検索文字列に大文字が含まれている場合は区別して検索する。
set smartcase

"外部のエディタで編集中のファイルが変更されたら自動で読み直す
set autoread

"インクリメンタルサーチ
"検索で一文字ごとに検索ワードが絞られてくる。
set incsearch

"Escの2回押しでハイライト消去
nmap <silent> <ESC><ESC> :nohlsearch<CR><ESC>

"バックスペースでインデントや改行を削除できるようにする
"Vimの初期設定では、<BS>キー(バックスペース)を押しても、
"インデントを削除できない、行 の先頭で前の行の改行を削除できない、
"Ctrl+Wで入力した単語しか削除できないという動作になります。
"backspace"オプションに、"indent"が入っていると
"オートインデントの空白文字を<BS>キーで削除できるよ うになります。
"eol"が含まれていると、行の先頭で<BS>キーを押すことにより、
"前の行の改行文字を削除して前の行と連結することがで きるようになります。
"start"を含めると、Ctrl+uやCtrl+wで入力した文字以外(最初から行にある文字)も
"削除することができるようにな ります。
set backspace=indent,eol,start



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"前回開いた編集個所を表示する
au BufWritePost * mkview


"QuickFix de syoutotu err
"autocmd BufReadPost * loadview



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"自動インデント
set autoindent

"cindent
"autoindentを、C言語プログラミング向けに特化したもの
"有効
"set cindent
"無効
"set nocindent



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"タブに関する設定
"Insertモードで: <Tab> を挿入するのに、適切な数の空白を使う。
"（タブをスペースに展開する）

"expandtabならば、タブ文字をスペースに変換。
"noexpandtabならば、スペースをタブ文字に変換。 
"set expandtab
set noexpandtab


"retab
"retabはその行のタブやスペースに対してexpandtab設定に従う。

"retab!
"retab!はそのバッファ全体のタブに対してexpandtab設定に従う。
"retab!はexpandtabかnoexpandtabに従う。




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



" Listモード (訳注: オプション 'list' がオンのとき) に使われる文字を設定する。
" タブ文字を CTRL-I で表示し、行末に $ で表示する。
"【Vim】タブ、空白、改行を可視化する - blog.remora.cx
"http://blog.remora.cx/2011/04/show-invisible-spaces-in-vim.html

"set list
set nolist

"set listchars=tab:>-,extends:<,trail:-,eol:<
set listchars=tab:»-,trail:-,eol:↲,extends:»,precedes:«,nbsp:%



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ファイル読み込み時にタブの展開する文字「幅」を設定
set tabstop=2
"autoindent時等に挿入されるタブの幅
set shiftwidth=2
"キーボードで<Tab>キーを押した時に挿入される空白の量、0の場合には挿入されるのは'tabstop'で指定した量
set softtabstop=0

"ruby
autocmd FileType ruby setl tabstop=2 shiftwidth=2 softtabstop=0

"Python
"タブキー設定 pythonでは言語仕様でタブ幅は８と決まっている
autocmd FileType python setl expandtab tabstop=8 shiftwidth=4 softtabstop=4
"autocmd FileType python setl tabstop=2 shiftwidth=2 softtabstop=0



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ヘルプ検索の日本語の優先順位を上げる
"日本語ヘルプファイルインストール後に
set helplang=ja,en


" 日本語入力ON時のカーソルの色を設定
if has('multi_byte_ime') || has('xim')
	highlight CursorIM guibg=Purple guifg=NONE
endif




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"----------------------------------------
" Vimスクリプト
"----------------------------------------
""""""""""""""""""""""""""""""
"ファイルを開いたら前回のカーソル位置へ移動
""""""""""""""""""""""""""""""
augroup vimrcEx
  autocmd!
  autocmd BufReadPost *
    \ if line("'\"") > 1 && line("'\"") <= line('$') |
    \   exe "normal! g`\"" |
    \ endif
augroup END

""""""""""""""""""""""""""""""
"挿入モード時、ステータスラインの色を変更
""""""""""""""""""""""""""""""
let g:hi_insert = 'highlight StatusLine guifg=darkblue guibg=darkyellow gui=none ctermfg=blue ctermbg=yellow cterm=none'

if has('syntax')
  augroup InsertHook
    autocmd!
    autocmd InsertEnter * call s:StatusLine('Enter')
    autocmd InsertLeave * call s:StatusLine('Leave')
  augroup END
endif
" if has('unix') && !has('gui_running')
"   " ESCでキー入力待ちになる対策
"   inoremap <silent> <ESC> <ESC>
" endif

let s:slhlcmd = ''
function! s:StatusLine(mode)
  if a:mode == 'Enter'
    silent! let s:slhlcmd = 'highlight ' . s:GetHighlight('StatusLine')
    silent exec g:hi_insert
  else
    highlight clear StatusLine
    silent exec s:slhlcmd
    redraw
  endif
endfunction

function! s:GetHighlight(hi)
  redir => hl
  exec 'highlight '.a:hi
  redir END
  let hl = substitute(hl, '[\r\n]', '', 'g')
  let hl = substitute(hl, 'xxx', '', '')
  return hl
endfunction


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"全角スペースの視覚化
"highlight ZenkakuSpace cterm=underline ctermfg=lightblue guibg=white
"match ZenkakuSpace /　/

""""""""""""""""""""""""""""""
"全角スペースを表示
""""""""""""""""""""""""""""""
"コメント以外で全角スペースを指定しているので、scriptencodingと、
"このファイルのエンコードが一致するよう注意！
"強調表示されない場合、ここでscriptencodingを指定するとうまくいく事があります。
"scriptencoding cp932
function! ZenkakuSpace()
  highlight ZenkakuSpace cterm=underline ctermfg=darkgrey gui=underline guifg=darkgrey
  "全角スペースを明示的に表示する
  silent! match ZenkakuSpace /　/
endfunction

if has('syntax')
  augroup ZenkakuSpace
    autocmd!
    autocmd VimEnter,BufEnter * call ZenkakuSpace()
  augroup END
endif






""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""






"Gvim設定
set gfn=Ricty\ 18



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ファンクションキー設定
"ファンクションキー設定
"ファンクションキー設定
"tab操作 vim7からの新機能
"
"tabを開くことができる最大数 デフォルト=10
set tabpagemax=8

"tabバーを最初から表示、まったく表示しないのなら0、デフォルトは1
set showtabline=2



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"tab <F1> 新規タブの作成
"tab <F2> 一つ前のタブへ
"tab <F3> 次のタブへ
"tab <F4> タブを閉じる(最後のタブページは閉じられない)

	nmap <silent> <F1> <Esc>:tabnew<CR>:tabmove<CR>
	nmap <silent> <F2> <Esc>:tabprevious<CR>
	nmap <silent> <F3> <Esc>:tabnext<CR>
	nmap <silent> <F4> <Esc>:tabc<CR>



"<F5>
	"Rubyscript用
	"QuickFix
	"<F5>でRubyスクリプト
	"保存後シンタックスチェックし、エラーをQuickFixに表示
	silent! nmap <unique> <F5> <Plug>(quickrun)
	"tuiki
	silent! nmap <unique> <M-F5> ,q

	"syntax ok なら E42エラーはありませんと表示
	"エラーがあった場合表示＆カーソル移動してくれる。
	"Rubyのシンタックスチェック
	"silent! nmap <unique> <C-F5>   :w<CR>:make -c %<CR>:cw<CR>:cfirst<CR>zz
  nmap <silent> <S-F5>   :w<CR>:make -c %<CR>:cw<CR>:cfirst<CR>zz

	"文法を厳しくチェック
	"初期化されていない変数などを見つける。
	"すべての警告を出力する。
"	nnoremap <silent> <S-F5> :w<CR>:!ruby -W %<CR>
"-w:数字が大きいほど細かく警告が出る。-W0は警告なし
"	nnoremap <silent> <S-F5> :w<CR>:!ruby -W0 %<CR>
"	nnoremap <silent> <S-F5> :w<CR>:!ruby -W1 %<CR>
"	nnoremap <silent> <S-F5> :w<CR>:!ruby -W2 %<CR>






"<F6> 


"<F7>
	"savevers.vim
	"<F7>でひとつ前のバックアップと比較
	nmap <silent> <F7> :VersDiff -<CR>

	"<Leader>vqでVersDiffから抜ける
	nmap <silent> <S-F7> :VersDiff -c<CR>



"<F8>
	"<F8>でひとつ後のバックアップと比較
	nmap <silent> <F8> :VersDiff +<CR>

	"<Leader>vqでVersDiffから抜ける
	nmap <silent> <S-F8> :VersDiff -c<CR>





"<F9>
	"Rails プロジェクトの立ち上げ
	nmap <silent> <F9> <Esc>:Rproject<CR>

	"Project.vimのツリー部分を表示したり隠す。
	"Quickfix
	nmap <silent> <S-F9> <Plug>ToggleProject





"<F10>
	"インデントを行う。
	nmap <silent> <F10> <Esc>gg=G

	"全てのウィンドウサイズを同じにする
	nmap <silent> <S-F10> <Esc><C-w>=

 	"最大の幅にする。
	"上下に分割されているウィンドウを広げる。
	nmap <silent> <M-F10> <Esc><C-w>7+

	"nmap <silent> <F6> <Esc><C-w> >
	"nmap <silent> <M-F6> <Esc><C-w> <
	"nmap <silent> <C-F6> <Esc><C-w> |





"<F11>
	"○.vimrcファイルの再読み込み。
	nmap <silent> <F11> <Esc>:source ~/.vimrc<CR>





"<F12>
	"全ファイル保存せず強制終了。
	nmap <silent> <F12> <Esc>:qall!<CR>

	"現在のファイルを再読み込み。(変更を破棄して再読み込み。)
	"カラー修飾されなかったときや、コマンドが効かなくなった時に
	nmap <silent> <S-F12> <Esc>:e!<CR>




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Insert mode補完 設定編
"set completeopt=menuone,preview



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"括弧など引用符をセットで入力すと、自動的に、一つ左に戻る。
"括弧など引用符をセットで入力すと、自動的に、一つ左に戻る。
"括弧など引用符をセットで入力すと、自動的に、一つ左に戻る。

"左右括弧を入力して、中央にカーソル移動
"inoremap {} {}<LEFT>
"inoremap [] []<LEFT>
"inoremap () ()<LEFT>
"inoremap "" ""<LEFT>
"inoremap '' ''<LEFT>
"inoremap <> <><LEFT>

"左括弧だけ入力して、右括弧補完+中央にカーソル移動
"inoremap { {}<LEFT>
"inoremap [ []<LEFT>
"inoremap ( ()<LEFT>
"inoremap " ""<LEFT>
"inoremap ' ''<LEFT>
"inoremap < <><LEFT>

"このマップはカーソルの位置に現在の日時を挿入します。
"<Leader> はデフォルトで¥キー
inoremap <Leader>date <C-R>=strftime('%Y/%m/%d (%a)')<CR>
inoremap <Leader>time <C-R>=strftime('%H:%M')<CR>
inoremap <Leader>w3cd <C-R>=strftime('%Y-%m-%dT%H:%M:%S+09:00')<CR>



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"移動系
"移動系
"移動系
"移動系
"移動系

"inoremap で挿入モード限定。
"通常モードでの特徴的な hjkl（←↓↑→）移動を挿入モードでも使えるようにしたもの。
"<Home>とか<End>なんかはオマケですが、割と重宝してます。
"<Home>だけ Ctrl キーじゃないのは、C-a が Linux の Screen と競合するから。

inoremap <leader>h <Home>
inoremap <leader>l <End>

"挿入モード時のインデントキーとかぶっているため使用しない。
"inoremap <C-d> <Del>

"挿入モード時のバックスペースキーとかぶっているため使用しない
"inoremap <C-h> <Left>
"inoremap <C-g> <Left>
"inoremap <C-j> <Down>
"inoremap <C-   > <Up>
"inoremap <C-l> <Right>

inoremap <M-h> <Left>
inoremap <M-g> <Left>
inoremap <M-j> <Down>
inoremap <M-k> <Up>
inoremap <M-l> <Right>




"カーソルの上下移動が、補完候補上に来たときのキー操作とかぶるので
"通常の挿入モードのカーソル移動はカーソルキーで操作する。

"キル＆ヤンク
"inoremap <Leader>k <ESC>d$i
"inoremap <Leader>p <ESC>pi



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"クリップボード系
"クリップボード系
"クリップボード系
"vimエディタからクリップボードを利用する。 — 名無しのvim使い
"http://nanasi.jp/articles/howto/editing/clipboard.html

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ビジュアルモードで選択したテキストが、クリップボードに入るようにする。
set clipboard+=autoselect
"無名レジスタに入るデータを、*レジスタにも入れる。
set clipboard+=unnamed

" GUI版vimエディタで、この機能を有効にする
"set guioptions+=a


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"Vim上でもCtrl+C、Ctrl+Vが使えるようにする。
"選択部分をクリップボードにコピー
vmap <C-C> "*y
"挿入モード時、クリップボードから貼り付け
imap <C-V> <ESC>"*pa
"選択部分をクリップボードの値に置き換え
vmap <C-V> d"*P

"コマンドライン時、クリップボードから貼り付け
cmap <C-V> <C-R>*

"検索をファイルの先頭へループしない。
"set nowrapscan
"検索をファイルの先頭へループする。
set wrapscan



"カーソルを行頭、行末で止まらないようにする
set whichwrap=b,s,h,l,<,>,[,]



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"" 画面分割＆移動＆遷移

"矢印キーに割り当てる。



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"矢印キーでの移動を禁止する: RemovableType
"http://rt.air-nifty.com/blog/2008/08/post_d08e.html

"矢印キーでの移動を禁止する

"mapは
	"ノーマル
	"ビジュアル
	"オペレータ保留モード
"map!は
	"インサート
	"コマンドモード
"でのキーマッピングを指定する。

map  <LEFT>  <ESC>
map! <LEFT>  <ESC>

map  <DOWN>  <ESC>
map! <DOWN>  <ESC>

map  <UP>    <ESC>
map! <UP>    <ESC>

map  <RIGHT> <ESC>
map! <RIGHT> <ESC>



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"おさかなラボ - [vim]矢印キーでコンパイルチェック
"http://kaede.to/~canada/doc/syntax-check-on-vim

"ruby対応
autocmd BufNewFile *.rb set ft=fuby

"QuickFixでコンパイルチェック

	"autocmd FileType ruby  :map <S-LEFT> <esc>:!/home/hi/.rvm/rubies/ruby-1.9.2-p290/bin/ruby -c %<cr>

	"nmap <silent> <LEFT> :w<CR>:make -c %<CR>:cw<CR>:cfirst<CR>zz


"コンパイルチェック
"autocmd FileType php   :map <down> <esc>:!/usr/local/bin/php  -l %<cr>
"autocmd FileType perl  :map <down> <esc>:!/usr/bin/perl       -c %<cr>
"autocmd FileType ruby  :map <down> <esc>:!/usr/local/bin/ruby -c %<cr>

"実行
"autocmd FileType php   :map <up>   <esc>:!/usr/local/bin/php     %<cr>
"autocmd FileType perl  :map <up>   <esc>:!/usr/bin/perl          %<cr>
"autocmd FileType ruby  :map <up>   <esc>:!/usr/bin/ruby          %<cr>



"Quickrunを実行
	"silent! nmap <unique> <RIGHT> <Plug>(quickrun)
	"nnoremap <silent> <RIGHT> :w<CR>:!ruby %<CR>
	"autocmd FileType ruby :map <RIGHT> <esc>:!/home/hi/.rvm/rubies/ruby-1.9.2-p180/bin/ruby %<cr>

"QuickFixを閉じる
"nmap <silent> <DOWN> :ccl<CR>



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"○同じ画面内の次の分割ウィンドウへ移動

nmap <silent> <LEFT>  <Esc><C-w>h
nmap <silent> <DOWN>  <Esc><C-w>j
nmap <silent> <UP>    <Esc><C-w>k
nmap <silent> <RIGHT> <Esc><C-w>l



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"ウィンドウ分割系
"キー操作	動作

"横分割
	":split
	":sp
	"Ctrl-w s	

"縦分割
	":vsplit
	":vs
	"Ctrl-w v	

"すべてのファイルをウィンドウで開く
	":ball
	":ba	

"Ctrl-w [wW]	カーソルをウィンドウ間で次々と移動
"Ctrl-w [hjklp]	カーソルをウィンドウ間で移動。
"Ctrl-w [tb]	カーソルを一番上（下）のウィンドウに移動

"Ctrl-w p	

":only			カーソルがあるウィンドウのみにする
"Ctrl-w o

":close			カーソルがあるウィンドウを閉じる
"Ctrl-w c

"Ctrl-w q		カーソルがあるウィンドウを終了する？

":new			横分割して新規バッファを作成
"Ctrl-w n

":vnew			縦分割して新規バッファを作成

"Ctrl-w [HJKL]	ウィンドウそのものを移動
"Ctrl-w [rR]	ウィンドウをスワップ
"Ctrl-w [+-]	ウィンドウの高さを変更

"Ctrl-w _	

"Ctrl-w =		全てのウィンドウサイズを同じにする

"nnoremap <silent> wq <Esc><C-w>=
"nnoremap <silent> ww <Esc><C-w><C-w>
"
"
""w1 :only<CR>	画面を一つにする(変更があると無効となる)
""w2 :sp<CR>		画面を上下に分ける(同じファイル)
""w3 :vsp<CR>	  画面を左右に分ける(同じファイル)
"
""w4 :new<CR>	  画面を上下に分割する(新しいバッファを作成)
""w5 :vnew<CR>	画面を左右に分割する(新しいバッファを作成)
""w6 :vsp<CR>	  画面を左右に分割する(同じファイル)
"
"nnoremap <silent> w1 :only<CR>
"nnoremap <silent> w2 :sp<CR>
"nnoremap <silent> w3 :vsp<CR>
"                  
"nnoremap <silent> w4 :new<CR>
"nnoremap <silent> w5 :vnew<CR>
"nnoremap <silent> w6 :vsp<CR>
"
"nnoremap <silent> w7 <Esc><C-w>|
"nnoremap <silent> w8 <Esc><C-w>_
""nnoremap <silent> w7 <Esc><C-w>30<
""nnoremap <silent> w8 <Esc><C-w>30-
"nnoremap <silent> w9 <Esc><C-w>30+
"nnoremap <silent> w0 <Esc><C-w>30>
"
""nnoremap <silent> w7 <Esc><C-w>|
""nnoremap <silent> w9 <Esc><C-w>_



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"テンプレート
"新しく HTML ファイルを開いたときに自動でテンプレートを挿入してくれる。
"~/.vim/templates/html.tplにテンプレートとなるファイルを作成しておく必要がある。
autocmd BufNewFile *.html 0r ~/.vim/templates/html.tpl
autocmd BufNewFile *.rb   0r ~/.vim/templates/rb.tpl
autocmd BufNewFile *.cpp  0r ~/.vim/templates/cpp.tpl
autocmd BufNewFile *.java 0r ~/.vim/templates/java.tpl
autocmd BufNewFile *.list 0r ~/.vim/templates/list.tpl
autocmd BufNewFile *.m    0r ~/.vim/templates/m.tpl
autocmd BufNewFile *.pl   0r ~/.vim/templates/pl.tpl
autocmd BufNewFile *.pm   0r ~/.vim/templates/pm.tpl
autocmd BufNewFile *.py   0r ~/.vim/templates/py.tpl
autocmd BufNewFile *.sh   0r ~/.vim/templates/sh.tpl



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ファイルを切り替える際、自動で保存するオプションとして
set autowrite
"自動で:hideを付加するオプションとして
set hidden



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分
"プラグインの設定部分



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"quickrun

"公式マニュアル
"doc/quickrun.jax at master from thinca/vim-quickrun - GitHub
"https://github.com/thinca/vim-quickrun/blob/master/doc/quickrun.jax

"Vim-users.jp - Hack #172: RSpecをquickrunする (1/2):
"http://vim-users.jp/2010/09/hack172/
"Vim-users.jp - Hack #176: RSpecをquickrunする (2/2)
"http://vim-users.jp/2010/10/hack176/

"実行コマンド
"デフォルトの「¥」＋「x」		vimコマンドラインで実行。
"デフォルトの「¥」＋「w」		左画面で実行。（単発型）
"デフォルトの「¥」＋「q」		左画面で実行。（追記型）

"実行結果ウインドウを閉じる
"(実行結果ウィンドウ上で)q
"(実行結果ウィンドウ上で):q



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"VimとPythonとnoseとTDDと - vimまっしぐら★ - vimグループ
"http://vim.g.hatena.ne.jp/tokorom/20110419/1303236571



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ファイルタイプの設定

"Pythonテスト
"テストコードと思われるファイルを開いたとき、そのfiletypeを「python.test」とする設定
autocmd BufWinEnter,BufNewFile test*.py set filetype=python.test

"Rspecテスト
"_spec.rbなファイルをruby.rspecという複合ファイルタイプにする
augroup RSpec
  autocmd!
  autocmd BufWinEnter,BufNewFile *_spec.rb set filetype=ruby.rspec
augroup END



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" quickrun.vim 用設定 
let g:quickrun_config = {}

"全環境
"全環境
"全環境
"環境変数を使う、画面を分割する。
let g:quickrun_config['*'] = {
\		'cmdopt'	:	'-W2',
\		'exec'		: '%c %o %s %a',
\	}



"let g:quickrun_config['*'] = {
"\		'command'		:	'',
"\		'cmdopt'	:	'-v -W2',
"\		'src'		:	'',
"\		'args'		:	'',
"\		'exec'		: '%c %o %s %a',
"\	}


"\		'vsplit'	:	'below',
"sayuuni分割をするようにする
"let g:quickrun_config={'*': {'vsplit': ''}}
"\		'*': {'vsplit': ''},

"jyouge分割をするようにする
"let g:quickrun_config={'*': {'split': ''}}

"atarasii uxindouno hiraki kata.
" 横分割時は下へ､ 縦分割時は右へ新しいウィンドウが開くようにする
set splitbelow
set splitright



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"シンボル	展開値
"%%		%自身
"%c		コマンド (|quickrun-option-command|)
"%o		コマンドラインオプション (|quickrun-option-cmdopt|)
"%s		ソースファイル (|quickrun-option-src|)
"%a		スクリプトの引数 (|quickrun-option-args|)

"exec ha komando + opusyon + source no jyunnban ni oku



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 横分割時は下へ､ 縦分割時は右へ新しいウィンドウが開くようにする
"実行結果を左側に表示？
"set splitbelow



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"\		'exec': ['%c -v %s'],
"\		'exec': ['%c -v %s'],
"\		'exec': '$rvm_bin_path/ruby %o',

"ruby ba-jyon to -w opusyon
"%o
"\		'cmdopt'	:	'-v -w',

"%a
"\		'args'	:	'',

" -v %a %s 
"\		'runmode': "async:remote:vimproc",
"\		'command': 'ruby',




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

	"let g:quickrun_config = {'args': 'fuga'}
	"let g:quickrun_config['python.test'] = {'command': 'nosetests', 'exec': ['%c -v %s']}



"左右に画面分割
"vsplit
"上下に画面分割
"split



" 上下に画面を分割をするようにする
"let g:quickrun_config={'*': {'split': ''}}



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ruby

"if strlen($rvm_bin_path)
"	let g:quickrun_config['ruby'] = {
"\		'command': 'ruby',
"\		'exec': '$rvm_bin_path/ruby %s',
"\		'tempfile': '{tempname()}.rb'
"\	}
"endif


"エラーが出る。
"	let g:quickrun_config['*.rb'] = {'exec': ['%c -w']}



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"python
"最終行の設定は、filetypeが「python.test」のときのquickrunの設定*2
"let g:quickrun_config['python.test'] = {'command': 'nosetests', 'exec': ['%c -v %s']}



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


" 設定例1
"let g:quickrun_config["_"] = {
"    \  "runner/vimproc/updatetime" : 100,
"    \ "split": "{'rightbelow 8sp'}"
"\ }

" 設定例2
"let g:quickrun_config["run/vimproc"] = {
"    \ "exec": "%s:p:r %a",
"    \ "output_encode" : "utf-8",
"    \ "runner" : "vimproc",
"    \ "outputter" : "buffer"
"\ }

" 設定例3
"if strlen($rvm_bin_path)
"	let g:quickrun_config['ruby'] = {
"\		'command': 'ruby',
"\		'exec': '$rvm_bin_path/ruby %s',
"\		'tempfile': '{tempname()}.rb'
"\	}
"endif







""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" specファイル全体を実行する場合
let g:quickrun_config['ruby.rspec'] = {'command': "rspec"}
"if strlen($rvm_bin_path)
"\  let g:quickrun_config['ruby.rspec'] = {
"\		'command': 'ruby',
"\		'exec': '$rvm_bin_path/rvm gemset use global && $rvm_bin_path/ruby %s',
"\		'tempfile': '{tempname()}.rb'
"\	}
"endif



" カーソルがある行のspecを実行する場合
" エラーが出る
"let g:quickrun_config['ruby.rspec'] = {'command': 'rspec', 'cmdopt': "-l {line('.')}"}
"let g:quickrun_config['ruby.rspec'] = {'command': "rspec -l {line('.')}"}



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"実行コマンド

" x コマンドライン上
"	\   '<Leader>x' : '>message',
" p シェル画面
"	\   '<Leader>p' : '-runner shell',
" w	単発
" q 追加

" 出力先別にショートカットキーを設定する
	for [key, com] in items({
	\   '<Leader>w' : '>buffer',
	\   '<Leader>q' : '>>buffer',
	\ })
		execute 'nnoremap <silent>' key ':QuickRun' com '-mode n<CR>'
		execute 'vnoremap <silent>' key ':QuickRun' com '-mode v<CR>'
	endfor


"デフォルトの¥rはproject.vimと衝突しているので
"silent! nmap <unique><C-q> <Plug>(quickrun)
"        nmap <silent!> <C-q> <Plug>(quickrun)


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"カーソル行のケースのみをquickrunでRSpecすることができます。

"quickrunは非同期で実行できるとはいえ、
"計算が終了するまで:-)のままquickrun outputは変化せず、
"計算が終了した時点ですべての出力を同時に表示します。 




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"quicklaunch.vim



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"quicklaunch.vim は |quickrun| に付属した簡単な設定集のようなものです。
"必要なければ
"let g:loaded_quicklaunch = 1

" \l でquicklaunchのリスト一覧を表示。

"1-9,0にコマンドを設定する。
"let g:quicklaunch_commands = {'1': 'ls'}
"let g:quicklaunch_commands = {'1': 'ruby'}
"let g:quicklaunch_commands = {'1': 'QuickRun'}
"let g:quicklaunch_commands = {'2': ':ruby -cW %'}
"let g:quicklaunch_commands = {'3': ''}
"let g:quicklaunch_commands = {'4': ''}
"let g:quicklaunch_commands = {'5': ''}
"let g:quicklaunch_commands = {'6': ''}
"let g:quicklaunch_commands = {'7': ''}
"let g:quicklaunch_commands = {'8': ''}
"let g:quicklaunch_commands = {'9': ''}
"let g:quicklaunch_commands = {'0': ''}



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"QuickFix
"対応する言語のシンタックスあるいは実行結果のエラーに基づくデバッグを支援するもの

"QuickFix ha vim honraino kinou
":cn #次のエラー箇所へジャンプ
":cp #前のエラー箇所へジャンプ(:cNでも同じ)
":ccl #QuickFixを閉じる

"vimでquickfixを自動で開く - Webtech Walker
"http://webtech-walker.com/archive/2009/09/29213156.html
"autocmd QuickfixCmdPost make,grep,grepadd,vimgrep if len(getqflist()) != 0 | copen | endif

"vim vimgrepやmake後にQuickFixウィンドウを自動的に開く方法
"http://kaworu.jpn.org/kaworu/2008-06-07-1.php

"autocmd QuickfixCmdPost make,grep,grepadd,vimgrep copen

" 自動的に QuickFix リストを表示する
"autocmd QuickFixCmdPost make,grep,grepadd,vimgrep,vimgrepadd cwin
"autocmd QuickFixCmdPost lmake,lgrep,lgrepadd,lvimgrep,lvimgrepadd lwin



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Vimでカーソル下の単語からRubyのリファレンスを検索 - ナレッジエース
"http://blog.blueblack.net/item_187

"カーソル下の単語をK(shift-k）で引く。

"augroup BufferAu
"    autocmd!
"    "初期化
"    au BufEnter * nnoremap K K
"    ".rbファイルでKでRefe検索
"		"カーソル上のキーワードで検索
"    au BufEnter *.rb nnoremap <silent> K :Refe <cword><CR>
"		"コマンドラインから直接入力
"    au BufEnter *.rb nnoremap <buffer> <silent> <C-k> :Refe<Space>
"augroup END

"q			バッファを閉じる。
"<C-C>	バッファを閉じる。

"o			カーソル下の単語からリファレンスを検索
"				(→検索結果のウィンドウ内では標準でこれが可能)
"
"B			元読んでいたリファレンスに戻る(Back)
"-			今開いているクラスのリファレンスを読む

"s, <C-k>   検索


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""





""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" ref.vim

"ref.vim の内部構造を大幅に書き換えた - 永遠に未完成
"http://d.hatena.ne.jp/thinca/20100418/1271537141

"kensakugo no ビューア
"ビューア内でも K が使えます。また、デフォルトでは

"<Plug>(ref-keyword)
"<CR> <C-]>		K と同様キーワードを辿る

"<Plug>(ref-back)
"<C-o> <C-t>		履歴を戻る

"<Plug>(ref-forward)
"<C-i>	 				履歴を進む

":RefHistory 	移動履歴が見れてジャンプできます。

		"カーソル上のキーワードで検索
		nnoremap <silent> ,a :<C-u>call ref#jump('normal', 'alc')<CR>
		vnoremap <silent> ,a :<C-u>call ref#jump('visual', 'alc')<CR>

		"コマンドラインから直接入力
		nmap <leader>as :<C-u>Ref alc<Space>

" テキストブラウザの表示を開始する行数（この設定行より上は不要な情報）
let g:ref_alc_start_linenumber = 39 

" 一度開いたページをキャッシュします。
let g:ref_alc_use_cache = 1 

"refeで最新のrubyマニュアルを読み込む。
"let g:ref_refe_cmd = "~/rubyrefm/refe-1_9_2"



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Xmpfilter
"gem i rcodetools
"Rspecテスト用のプラグイン
"README.vim

"Switching between implementation and test files
"The actual binding can be changed in your .vimrc as follows:
let g:RCT_toggle_binding="<C-b><C-t>"  " use ^X^T to go test <=> implementation

"Code completion
"This functionality relies on fri for quick lookups. It can be enabled by setting
let g:rct_completion_use_fri = 1  " 0 by default (disabled)

" 20 by default, about a couple secs max wait on a normal machine
let g:rct_completion_info_max_len = 20


"Quick RI documentation and exact tag jumping



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"xmpfilterをvim上で使うための.vimrcでのキー設定。
"annotations＝注釈
"使用コマンド一覧

"eigenclass - xmpfilter: automagic Test::Unit assertions/RSpec expectations and code annotations
"http://eigenclass.org/hiki/xmpfilter

"<Leader>g	現在行/選択行にxmpfilterを実行するコマンド
"<Leader>f	バッファ全体にxmpfilterを実行 
"<Leader>a	現在行/選択行に「# =>」マークを追加
"<Leader>d	現在行/選択行の「# =>」マークを削除

"RSpec
"<Leader>A	現在行/選択行に
"<Leader>F	ファイル全体に



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"設定
" plain annotations
" 現在行/選択行にxmpfilterを実行するコマンド
"map <silent> <Leader>g !xmpfilter -a<cr>
"nmap <silent> <Leader>g V<Leader>g
"imap <silent> <Leader>g <ESC><Leader>ga

" Annotate the full buffer
" I actually prefer ggVG to %; it's a sort of poor man's visual bell 
" バッファ全体にxmpfilterを実行 
"nmap <silent> <Leader>f mzggVG!xmpfilter -a<cr>'z
"imap <silent> <Leader>f <ESC><Leader>f

" Add # => markers
" 基本的な注釈「# =>」マークを行の最後尾に追加
" 現在行/選択行に「# =>」マークを追加
"map <silent> <Leader>a !xmpfilter -m<cr><Leader>e
"nmap <silent> <Leader>a V<Leader>a
"imap <silent> <Leader>a <ESC><Leader>aa

" Remove # => markers
" 現在行/選択行の「# =>」マークを削除
" ms:call解説
" mがマーク（a～z）
" zがマークで覚えさせる場所の記号
" call すぐしたにある.vimrcに書いた関数を呼ぶ
" <ESC><ESC>はハイライトを消すコマンドをこのファイルに設定してある。
"vmap <silent> <Leader>d ms:call RemoveRubyEval()<CR> <ESC><ESC>
"nmap <silent> <Leader>d V<Leader>d
"imap <silent> <Leader>d <ESC><Leader>da

function! RemoveRubyEval() range
  let begv = a:firstline
  let endv = a:lastline
  normal Hmt
  set lz
  execute ":" . begv . "," . endv . 's/\s*# \(=>\|!!\).*$//e'
  normal 'tzt`s
  set nolz
  redraw
endfunction


"# =>を追加する場所が右端すぎるので間を詰める。
":%s/ \+#/    #/g
"vmap <silent> <Leader>e <ESC><Leader>e
"nmap <silent> <Leader>e :%s/     \+# =>/     # =>/g<CR><ESC><ESC>
"imap <silent> <Leader>e <ESC><Leader>e



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"XMP Rspec
" assertions
" xmpfilter -＜オプション指定＞
" -s	RSpec generate RSpec expectations instead
" -u	Test::Unit 

" 現在行/選択行に
"map <silent> <Leader>A !xmpfilter -s<cr>
"nmap <silent> <Leader>A V<Leader>A
"imap <silent> <Leader>A <ESC><Leader>Aa

"ファイル全体に
"nmap <silent> <Leader>F mzggVG!xmpfilter -s<cr>'z
"imap <silent> <Leader>F <ESC><Leader>Fa



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 行頭にまとめて挿入
" Rubyのコメント
" 矩形選択で<c-v>コメントしたい行を選択。
" Iを入力。
" コメントアウトしたい文字#を入力。
" ESCを二回押す。<=きも

" 行頭をまとめて消す。
" 矩形選択する。
" xで消える。

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"NERD_commenter
"vim でコメント化するプラグイン
"NERD Commenterの説明 - あじーん
"http://d.hatena.ne.jp/nishikawasasaki/20101226/1293374432

"<Leader>/			コメントアウト
"<Leader>cc		コメントアウト
"<Leader>/a		コメントアウト後入力
"<Leader>/9		カーソル場所から行末までをコメント

"<Leader>/s		複数行
"<Leader>/b		ブロック全体

"<Leader>c			コメントアウト
"<Leader>C			カーソル場所から行末までをコメント
"<Leader>u			アンコメント	



"デフォルトのマッピングの無効化
"NERD_Commenter が勝手にマッピングを設定しない
"NERDSpaceDelims は設定したい。
let g:NERDCreateDefaultMappings = 0
let g:NERDSpaceDelims = 1

"トグル
nmap <Leader>/ <Plug>NERDCommenterToggle
vmap <Leader>/ <Plug>NERDCommenterToggle

"コメントアウト後すぐに入力。
nmap <Leader>/a <Plug>NERDCommenterAppend
"カーソルのあるところから行末までをコメントアウト
nmap <leader>/9 <Plug>NERDCommenterToEOL

"複数行に渡るコメントアウト
 "複数行
vmap <Leader>/s <Plug>NERDCommenterSexy
 "ブロック全体
vmap <Leader>/b <Plug>NERDCommenterMinimal

"設定解説
"ノーマルモードで\cc				一行をコメントアウト
"ヴィジュアルモードで 行を選択後 \c	一括コメントアウト
nmap <Leader>cc <Plug>NERDCommenterAlignLeft
vmap <Leader>c  <Plug>NERDCommenterComment
nmap <Leader>C  <Plug>NERDCommenterToEOL
vmap <Leader>C  <Plug>NERDCommenterAlignLeft

"アンコメント
"アンコメントに別のマッピングが必要です。
nmap <Leader>u  <Plug>NERDCommenterUncomment
vmap <Leader>u  <Plug>NERDCommenterUncomment



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" FuzzyFinder.vim
" FuzzyFinder.vim
" FuzzyFinder.vim

"FuzzyFinder - buffer/file/command/tag/etc explorer with fuzzy matching : vim online
"http://www.vim.org/scripts/script.php?script_id=1984

"L9 - Vim-script library : vim online
"http://www.vim.org/scripts/script.php?script_id=3252

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" fuzzy_finder設定

"autocmd FileType fuf nmap <C-c> <ESC>
"let g:fuf_patternSeparator = ' '
"let g:fuf_modesDisable = ['mrucmd']
"let g:fuf_mrufile_exclude = '\v\.DS_Store|\.git|\.swp|\.svn'
"let g:fuf_mrufile_maxItem = 200
"let g:fuf_enumeratingLimit = 50
"let g:fuf_file_exclude = '\v\.DS_Store|\.git|\.swp|\.svn'

"let g:FuzzyFinderOptions.MruFile.max_item=200
"let g:FuzzyFinderOptions.MruCmd.max_item = 200

"デフォルトで、リターンキーの代わりにCtrl+lで決定すると
"そのファイルを新しいタブで開く。
"vimrcで以下のようにキーバインドを切り替えて
"リターンキーで新しいタブでファイルを開く。
"タブキーで現在のタブでファイルを開く。
"let g:fuf_keyOpenTabpage = '<CR>'
"let g:fuf_keyOpen = '<Tab>'



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" fuzzy_finderキーマッピング

"ノーマルモードでfは何もしない。と言う設定。
"nnoremap <Space>f f
"nnoremap <Space>F F
"nnoremap f <Nop>

"fb : 現在のタブで バッファを切り替える
"ff : 現在のタブで ファイルを開く
"fm : 現在のタブで 最近使ったファイルを開く
"nnoremap <unique> <silent> fb :<C-u>FufBuffer!<CR>
"nnoremap <unique> <silent> ff :<C-u>FufFile! <C-r>=expand('%:~:.')[:-1-len(expand('%:~:.:t'))]<CR><CR>
"nnoremap <unique> <silent> fm :<C-u>FufMruFile!<CR>

"nnoremap <unique> <silent> <C-t> :<C-u>FufFile! <C-r>=expand('%:~:.')[:-1-len(expand('%:~:.:t'))]<CR><CR>

"tb : 新しいタブで バッファを切り替える
"tf : 新しいタブで ファイルを開く
"tm : 新しいタブで 最近使ったファイルを開く
"nnoremap <unique> <silent> tb :<C-u>tabnew<CR>:tabmove<CR>:FufBuffer!<CR>
"nnoremap <unique> <silent> tf :<C-u>tabnew<CR>:tabmove<CR>:FufFile! <C-r>=expand('#:~:.')[:-1-len(expand('#:~:.:t'))]<CR><CR>
"nnoremap <unique> <silent> tm :<C-u>tabnew<CR>:tabmove<CR>:FufMruFile!<CR>

"nmap <silent> <Leader>fc :FuzzyFinderMruCmd<CR>


"http://code.google.com/p/vim-fuzzyfinder/wiki/DescriptionJapanese

"let g:FuzzyFinderOptions = { 'Base':{}, 'Buffer':{}, 'File':{}, 'Dir':{}, 'MruFile':{}, 'MruCmd':{}, 'Bookmark':{}, 'Tag':{}, 'TaggedFile':{}}
"let g:FuzzyFinderOptions.Base.ignore_case = 1

"let g:FuzzyFinderOptions.Base.abbrev_map  = {
"      ¥   '¥C^VR' : [
"      ¥     '$VIMRUNTIME/**',
"      ¥     '‾/.vim/**',
"      ¥     '$VIM/.vim/**',
"      ¥     '$VIM/vimfiles/**',
"      ¥   ],
"      ¥ }

"バッファモードを開始するコマンド
"nnoremap <silent> <C-n>      :FuzzyFinderBuffer<CR>

"nnoremap <silent> <C-m>      :FuzzyFinderFile <C-r>=expand('%:‾:.')[:-1-len(expand('%:‾:.:t'))]<CR><CR>
"nnoremap <silent> <C-j>      :FuzzyFinderMruFile<CR>

"nnoremap <silent> <C-p>      :FuzzyFinderDir <C-r>=expand('%:p:‾')[:-1-len(expand('%:p:‾:t'))]<CR><CR>
"nnoremap <silent> <C-f><C-d> :FuzzyFinderDir<CR>

"nnoremap <silent> <C-c>      :FuzzyFinderMruCmd<CR>
"nnoremap <silent> <C-b>      :FuzzyFinderBookmark<CR>
"nnoremap <silent> <C-f><C-t> :FuzzyFinderTag!<CR>
"nnoremap <silent> <C-f><C-g> :FuzzyFinderTaggedFile<CR>
"noremap  <silent> g]         :FuzzyFinderTag! <C-r>=expand('<cword>')<CR><CR>
"nnoremap <silent> <C-f>b     :FuzzyFinderAddBookmark<CR>
"nnoremap <silent> <C-f><C-e> :FuzzyFinderEditInfo<CR>



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"unite.vim
"unite.vim
"unite.vim

"せっかくだから、俺はこの Unite + vim-ref を選ぶぜ！ - blog.remora.cx
"http://blog.remora.cx/2010/12/vim-ref-with-unite.html
"vim-refはvimでリファレンスを見るプラグイン
"Vimでunite.vimプラグインを使い始めて一週間 - アインシュタインの電話番号☎
"http://d.hatena.ne.jp/ruedap/20110117/vim_unite_plugin_1_week



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"キー	説明

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 起動設定
"<C-N> ,uf   ファイル一覧
"<C-P> ,ub   バッファ一覧
"<C-Z> ,um   最近使ったファイルの一覧
"      ,uu   常用セット
"      ,ua   全部乗せ
"      ,ur   レジスタ一覧



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ノーマルモードでのunite.vimのデフォルトキーマッピング
"<CR>									選択している候補に対してデフォルトのアクションを実行する
"<ESC>								ノーマルモードに移行する
"<Tab>								選択している候補に対して実行するアクションを選択する

"<C-p> または <Up>		前の候補に移動。ただし候補の先頭にいる場合はループする
"<C-n> または <Down>	次の候補に移動。ただし候補の最後にいる場合はループする

"<C-f>								次の候補ページを表示
"<C-b>								前の候補ページを表示

"<C-h> または <BS>		カーソル直前の1文字を消す。
" 										文字が入力されていない場合はuniteを終了する

"<C-u>								カーソルから行の先頭までの文字をすべて削除する
"<C-w>								カーソル直前の単語を削除する

"<C-a> または <Home>	カーソルを行の先頭に移動する

"複数キーアクション
"<C-u><C-h>でuniteを終了する
"<C-a><C-h>でuniteを終了する



"/	候補を選択している場合は narrow アクションの実行
"d	候補を選択している場合は delete アクションの実行*1



"<Space>	候補を選択している場合はカレント行の候補のマークを反転させる。
"	複数の候補をマークすれば、複数の候補に対して一気にアクションを実行することができる



"x	候補を選択している場合はクイックマッチを行い、
"	選択した候補のデフォルトアクションを実行する。
"	マークしている候補がある場合は無効となる。

"<C-m> 	インサートモードでパスを入力中に<C-m>を押すと、
"その時リストで一番上のハイライトされているパスを確定（入力エリア上に補完）できる。
"一番上に表示されているパスを確定（補完）できる



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"コマンドモード
"k                    上移動
"j                    下移動

"コマンドモード、挿入モード
"<C-P>                上移動
"<C-N>                下移動

"ファイル名の上で、Enter を押すと開く。
" ウィンドウを分割して開いてくれる。
" Ctrl + J            上下に分割して開く
" Ctrl + K            左右に分割して開く



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"設定

" 入力モードで開始する
let g:unite_enable_start_insert=1



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" バッファ一覧
noremap <C-P> :Unite buffer<CR>
" ファイル一覧
"相対パス
"noremap <C-N> :Unite -buffer-name=file file<CR>
"絶対パス
"nnoremap <silent> ,uf :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
noremap <C-N> :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
" 最近使用したファイル一覧
noremap <C-Z> :Unite file_mru<CR>


" 常用セット buffer to saikin no files
nnoremap <silent> ,uu :<C-u>Unite buffer file_mru<CR>
" 全部乗せ
nnoremap <silent> ,ua :<C-u>UniteWithBufferDir -buffer-name=files buffer file_mru bookmark file<CR>
" レジスタ一覧 copipe
nnoremap <silent> ,ur :<C-u>Unite -buffer-name=register register<CR>



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" ウィンドウをjyouge ni 分割して開く
"au FileType unite nnoremap <silent> <buffer> <expr> <C-j> unite#do_action('split')
"au FileType unite inoremap <silent> <buffer> <expr> <C-j> unite#do_action('split')

" ウィンドウを縦に分割して開く
"au FileType unite nnoremap <silent> <buffer> <expr> <C-j> unite#do_action('vsplit')
"au FileType unite inoremap <silent> <buffer> <expr> <C-j> unite#do_action('vsplit')

" ESCキーを2回押すと終了する
au FileType unite nnoremap <silent> <buffer> <ESC><ESC> :q<CR>
au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>:q<CR>



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"fuf → unite に乗り換えて１日目 - basyura’s blog
"http://d.hatena.ne.jp/basyura/20100908/p1

" 初期設定関数を起動する
"au FileType unite call s:unite_my_settings()
"function! s:unite_my_settings()
  " Overwrite settings.
"endfunction

"autocmd FileType unite call s:unite_my_settings()
"function! s:unite_my_settings()
"  " Overwrite settings.
"  imap <buffer> jj <Plug>(unite_insert_leave)
"  imap <buffer> <ESC> <ESC><ESC>
"  nnoremap <buffer> t G
"  startinsert
"endfunction




" 様々なショートカット
"  解説
"  '^;v'
"  これは実質;vと入力する。
"  ''で囲んで^はコマンドの開始を意味する。

" @       file_mru と組み合わせると、カレントディレクトリ以下のみに絞り込まれる。
" @@      現在のファイルのある場所以下に絞り込まれる。

" \~
" \\\@<! 
" \\ \@!


"call unite#set_substitute_pattern('file', '^@', '\=getcwd()."/*"', 1)
"call unite#set_substitute_pattern('file', '^@@', '\=fnamemodify(expand("#"), ":p:h")."/"', 2)

"call unite#set_substitute_pattern('files', '^\\', '~/*')
"call unite#set_substitute_pattern('file', '^\~', escape($HOME, '\'), -2)
"call unite#set_substitute_pattern('file', '\\\@<! ', '\\ ', -20)
"call unite#set_substitute_pattern('file', '\\ \@!', '/', -30)

"if has('win32') || has('win64')
"  call unite#set_substitute_pattern('file', '^;p', 'C:/Program Files/')
"  call unite#set_substitute_pattern('file', '^;v', '~/vimfiles/')
"else
"call unite#set_substitute_pattern('file', '^;v', '~/.vim/')
"endif



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"unite拡張
"unite-rails.vim - basyura’s blog
"http://d.hatena.ne.jp/basyura/20110526/p1
"rails.vim の gf と :R が便利すぎるので、これの補助ツールとして使う感じ。

"<C-x>はvim上の数値をデクリメント
nnoremap <C-x> :Unite rails/

"unite /app/models				 	 	 :Unite rails/model
"unite /app/controllers		 	 	 :Unite rails/controller
"unite /app/views					 	 	 :Unite rails/view
"unite /app/helpers				 	 	 :Unite rails/helper
"unite /app/mailers				 	 	 :Unite rails/mailer
"unite /lib								 	 	 :Unite rails/lib
"unite /db								 	 	 :Unite rails/db
"unite /config						 	 	 :Unite rails/config
"unite /log								 	 	 :Unite rails/log
"unite /public/javascripts		 :Unite rails/javascripts
"unite /public/stylesheets		 :Unite rails/stylesheets

"== maybe ==
"  unite routes								 :Unite rails/routes
"  unite root									 :Unite rails/root
"  unite command
"    :Unite rails/command
"      > rake db:migrate
"



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" unite-neco {{{
let s:unite_source = {'name': 'neco'}

function! s:unite_source.gather_candidates(args, context)
  let necos = [
        \ "~(-'_'-) goes right",
        \ "~(-'_'-) goes right and left",
        \ "~(-'_'-) goes right quickly",
        \ "~(-'_'-) goes right then smile",
        \ "~(-'_'-)  -8(*'_'*) go right and left",
        \ "(=' .' ) ~w",
        \ ]
  return map(necos, '{
        \ "word": v:val,
        \ "source": "neco",
        \ "kind": "command",
        \ "action__command": "Neco " . v:key,
        \ }')
endfunction

"function! unite#sources#locate#define()
"  return executable('locate') ? s:unite_source : []
"endfunction
"call unite#define_source(s:unite_source)

" }}}


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"lookupfile.vim
"refeでのインクリメンタルサーチ用

"lookupfile.vim - ホビロン、それは - subtech
"http://subtech.g.hatena.ne.jp/secondlife/20070105/1167980175

"全部のバッファを一覧に表示
"nmap <unique> <silent> <C-S> :LUBufs ^.*<CR>
"let g:LookupFile_AlwaysAcceptFirst=1
"let g:LookupFile_PreserveLastPattern=0
"let g:LookupFile_AllowNewFiles=0

"こちらがメイン。
"こちらがメイン。
"こちらがメイン。
"lookupfile.vimを使用するrefe側の設定。

"refe.txt* ReFe Browser  For Vim version 7.0.
"http://rails2u.com/projects/refe.vim/refe.txt.html

"refe.vim での設定。
"検索で LookupFile を使うかどうかの設定です。
"let g:RefeUseLookupFile = 1

"検索にlookupfile.vimを使用しない
"let g:loaded_lookupfile = 0

"何文字からインクリメンタルな検索を行うかの設定です。
"デフォルトでは 3 です。
"let g:RefeMinPatLength=3



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Rails ruby関連

"vim-ruby

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"挿入モードで
"<C-Space>でomni補完
"<C-Space>でomni補完
"<C-Space>でomni補完
"imap <C-u> <C-x><C-o>
"imap <C-Space> <C-x><C-o>



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"rails関連
"http://homepage3.nifty.com/moro/rails_vim_cheatsheet.pdf
"短縮名は「:Rabbrev」で現在のファイルタイプに応じた一覧が表示されます。

"Rails関連ファイルで文字コードをUFT-8に設定
autocmd User Rails* set fenc=utf-8

"rails.vim
let g:rails_level=4
let g:rails_default_file="app/controllers/application.rb"

let g:rails_default_database="sqlite3"
"let g:rails_default_file="mysql"




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ファイルタイプ別設定

"ファイルタイプ ruby,eruby
"現在のルビーを実行 or syntax check
"autocmd FileType ruby,eruby :map <S-x> <ESC>:!ruby %<CR>
"autocmd FileType ruby,eruby :map <Leader>e <ESC>:!ruby -cW %<CR>
"autocmd FileType ruby,eruby :map <S-Z> <ESC>:!ruby -c %<cr>

"ファイルタイプ html
autocmd FileType html set filetype=xhtml

" Ruby構文チェック
"setlocalって?
"setlocalは、setと同じですが、
"その影響範囲が、カレントバッファまたはウインドウ内になります。
"こうする事で、別のバッファやウインドウでRubyとか編集した時に
"rubyの設定が反映されないですむようになります。
"autocmd FileType ruby,eruby setlocal makeprg=ruby\ -c\ %
"autocmd FileType ruby,eruby setlocal errorformat=%m\ in\ %f\ on\ line\ %l




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"rubycomplete.vim
"Rubyのオムニ補完を設定(ft-ruby-omni)
"autocmd FileType ruby setlocal omnifunc=rubycomplete#Complete
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete

autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"autocomplpop.vim

"let g:acp_enableAtStartup = 1
"let g:acp_ignorecaseOption = 1
"let g:acp_completeOption = '.,w,b,k'
"let g:acp_behaviorKeywordCommand = "\<C-n>"
"let g:acp_behaviorKeywordLength = 2
"let g:acp_behaviorFileLength = 0
"
"let g:acp_behaviorRubyOmniMethodLength = 0
"let g:acp_behaviorRubyOmniSymbolLength = 1
"let g:acp_behaviorPythonOmniLength = 0
"let g:acp_behaviorPerlOmniLength = -1
"let g:acp_behaviorXmlOmniLength = -1
"let g:acp_behaviorHtmlOmniLength = 0
"let g:acp_behaviorCssOmniPropertyLength = 1
"let g:acp_behaviorCssOmniValueLength = 0


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"komandorainjino komanndorain補完候補を表示する
"set wildmenu

" -------------------
" 補完
" -------------------
set wildmode=list:longest,list:full 
" list:longest 複数あれば全て羅列・共通最長まで補完
" list:full 複数あれば全て羅列・最初のマッチのマッチを補完


" 閉じ括弧が入力されたとき、対応する開き括弧にわずかの間ジャンプする。
"（有効:showmatch/無効:noshowmatch）
set showmatch

"カーソルが括弧の始めに要る時間が長いと感じる場合は、
"オプションの'matchtime'を変更してください。
"このオプションの値が、マッチした括弧の始めを表示する時間(1/10秒)になります。
set matchtime=2






""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""Mac OSXでのvim環境整理。.vimrcやらオヌヌメPlug inやらまとめ。 - ゆろよろ日記
""http://d.hatena.ne.jp/yuroyoro/20101104/1288879591


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"  " カーソル行をハイライト
set cursorline

  
" カレントウィンドウにのみ罫線を引く
augroup cch
  autocmd! cch
  autocmd WinLeave * set nocursorline
  autocmd WinEnter,BufRead * set cursorline
augroup END

"highlight = hi
:hi clear CursorLine
:hi CursorLine gui=underline
highlight CursorLine ctermbg=black guibg=black



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Vim-users.jp
"http://vim-users.jp/
"Hack #122: 行末までヤンクする

"D	カーソル位置から行末まで削除
"C	カーソル位置から行末まで削除＆挿入モード
"Y	カーソル位置から行末までヤンク
nnoremap Y y$



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"実験的追加

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ディレクトリ閲覧時の表示がツリー形式になる。
"let g:netrw_liststyle = 3

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Hack #121: バッファ名をペーストする
"Normal modeの場合は以下のコマンドを実行します:
"      "%p
"Insert modeやCommand-line modeの場合は以下のコマンドを入力します:
"      <C-r>%



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 自然言語処理用
" python

"Pythonを快適に編集できるようvimを設定する - 玉虫色に染まれ！
"http://d.hatena.ne.jp/over80/20090305/1236264851



"python ハイライト
autocmd FileType python let python_highlight_all = 1

"辞書
"autocmd FileType python let g:pydiction_location='~/.vim/bundle/pydiction/complete-dict'
"オートインデント
autocmd FileType python setl autoindent
"賢いインデントをする
autocmd FileType python setl smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class


"Python実行
" シェル画面上に結果表示

"function! s:Exec()
"    exe "!" . &ft . " %"        
":endfunction         
"command! Exec call <SID>Exec() 
"map <silent> ,p :call <SID>Exec()<CR>



"Pythonで実行
" シェル画面上に結果表示

"nnoremap <silent> ,, :<C-u>execute '!' &l:filetype '%'<Return>




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"新型スカウターを開発した - 永遠に未完成
"http://d.hatena.ne.jp/thinca/20091031/1257001194
"戦闘力 - vimグループ
"http://vim.g.hatena.ne.jp/keyword/%e6%88%a6%e9%97%98%e5%8a%9b

function! Scouter(file, ...)
  let pat = '^\s*$\|^\s*"'
  let lines = readfile(a:file)
  if !a:0 || !a:1
    let lines = split(substitute(join(lines, "\n"), '\n\s*\\', '', 'g'), "\n")
  endif
  return len(filter(lines,'v:val !~ pat'))
endfunction
command! -bar -bang -nargs=? -complete=file Scouter
\        echo Scouter(empty(<q-args>) ? $MYVIMRC : expand(<q-args>), <bang>0)



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"自動補完について
"Vim では [Ctrl-n] での補完機能
"[Ctrl-x][Ctrl-o] でのオムニ補完が使える


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


" neocomplcache
" neocomplcache
" neocomplcache
" 自動補完 vimプラグイン 

" * 	ワイルドカード
" ../ ファイル名の補完の開始。

"neocomplcache を有効にする
let g:neocomplcache_enable_at_startup = 1

"neocomplcache の smart case 機能を有効にする
" 大文字小文字を区別する
let g:neocomplcache_enable_smart_case = 1

" 大文字が入力されるまで大文字小文字の区別を無視する
let g:neocomplcache_enable_ignore_case = 1

"neocomplcache の camel case 機能を有効にする
" キャメルケース補完を有効にする
" 大文字を区切りとしたワイルドカードのように振る舞う
"大文字でAIOOBEと打つと、ArrayIndexOutOfBoundsException が候補に出てきます。
let g:neocomplcache_enable_camel_case_completion = 1

"_区切りの補完を有効にする
let g:neocomplcache_enable_underbar_completion = 1

"シンタックスをキャッシュするときの最小文字長を設定する
let g:neocomplcache_min_syntax_length = 3
let g:neocomplcache_lock_buffer_name_pattern = '\*ku\*'




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Define dictionary.
let g:neocomplcache_dictionary_filetype_lists = {
    \ 'default' : '',
    \ 'vimshell' : $HOME.'/.vimshell_hist',
    \ 'scheme' : $HOME.'/.gosh_completions'
        \ }



" Define keyword.
if !exists('g:neocomplcache_keyword_patterns')
    let g:neocomplcache_keyword_patterns = {}
endif
let g:neocomplcache_keyword_patterns['default'] = '\h\w*'



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"プラグインごとに補完開始文字数を設定
"snippets\completeのみ1文字で補完
"tags\completeは3文字
"他は2文字で補完

let g:neocomplcache_auto_completion_start_length = 1
if !exists('g:neocomplcache_plugin_completion_length')
endif
let g:neocomplcache_plugin_completion_length = {
\'snippets_complete' : 2, 
\'buffer_complete' : 2, 
\'syntax_complete' : 2, 
\'tags_complete' : 3, 
\}


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"let g:neocomplcache_quick_match_patterns['default'] = '\`'

let g:neocomplcache_max_list = 30


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



"オムニ補完
" Enable heavy omni completion.
if !exists('g:neocomplcache_omni_patterns')
  let g:neocomplcache_omni_patterns = {}
endif

let g:neocomplcache_omni_patterns.ruby = '[^. *\t]\.\w*\|\h\w*::'
let g:neocomplcache_omni_patterns.php = '[^. \t]->\h\w*\|\h\w*::'
let g:neocomplcache_omni_patterns.c = '\%(\.\|->\)\h\w*'
let g:neocomplcache_omni_patterns.cpp = '\h\w*\%(\.\|->\)\h\w*\|\h\w*::'


" Enable omni completion.
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd Filetype css set omnifunc=csscomplete#CompleteCSS
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS


"let g:neocomplcache_omni_patterns = 1

"タグ補完の結果をキャッシュ
"NeoComplCacheCachingTags

"大文字が含まれるときは大文字小文字を区別します。



" -入力による候補番号の表示
"let g:neocomplcache_enable_quick_match = 1

"補完候補の一番先頭を選択状態にする(AutoComplPopと似た動作)
"便利ですが誤爆しやすいため、デフォルトでは無効化しています。 
"不要
"let g:neocomplcache_enable_auto_select = 1

" snippet ファイルの保存先
" ~/.vim/snippetsを作成しておく。
let g:neocomplcache_snippets_dir='~/.vim/snippets'

" シンタックスファイルの補完対象キーワードとする最小の長さ
let g:NeoComplCache_MinSyntaxLength = 3
" プラグイン毎の補完関数を呼び出す文字数
let g:NeoComplCache_PluginCompletionLength = {
  \ 'keyword_complete'  : 2,
  \ 'syntax_complete'   : 2
  \ }


" Shell like behavior(not recommended).
"set completeopt+=longest
"let g:neocomplcache_enable_auto_select = 1
"let g:neocomplcache_disable_auto_complete = 1
"inoremap <expr><TAB>  pumvisible() ? "\<Down>" : "\<C-x>\<C-u>"



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"キーマッピング
" Plugin key-mappings.

"スニペットの展開をできるようにします。
"smapも同時に設定しないと、デフォルト値が選択されているときに展開やジャンプがされません。
"genzauga tab de tenkai saseteiru
"imap <C-l> <Plug>(neocomplcache_snippets_expand)
"smap <C-l> <Plug>(neocomplcache_snippets_expand)

"前回行われた補完をキャンセルします。
inoremap <expr><C-g>     neocomplcache#undo_completion()
"補完候補のなかから、共通する部分を補完します。ちょうど、シェルの補完のような動作です。
"inoremap <expr><C-   >     neocomplcache#complete_common_string()



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"SuperTab like snippets behavior.
"TABでスニペットの展開をできるようにします。
"SuperTabの挙動をエミュレーションしています。
"スニペットが展開可能なら展開を、
"補完中なら次の候補を選択、
"そうでなければ<Tab>を挿入します。 
"smapも同時に設定しないと、デフォルト値が選択されているときに展開やジャンプがされません。

"imap <expr><TAB> neocomplcache#sources#snippets_complete#expandable() ? "\<Plug>(neocomplcache_snippets_expand)" : pumvisible() ? "\<C-n>" : "\<TAB>"
"smap <expr><TAB> neocomplcache#sources#snippets_complete#expandable() ? "\<Plug>(neocomplcache_snippets_expand)" : pumvisible() ? "\<C-n>" : "\<TAB>"




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"現在選択している候補を確定します。
inoremap <expr><C-y> neocomplcache#close_popup()

"現在選択している候補をキャンセルし、ポップアップを閉じます。
"特にneocomplcacheは実装の関係で、２回<C-e>を押さなければポップアップを閉じることができません。
"よって、このマッピングは設定しておくことをお勧めします。
inoremap <expr><C-e> neocomplcache#cancel_popup()



"<C-h>や<BS>を押したときに確実にポップアップを削除します。
" Recommended key-mappings.
" <CR>: close popup and save indent.
" <C-h>, <BS>: close popup and delete backword char.

"inoremap <expr><C-h> neocomplcache#smart_close_popup() . "\<C-h>"
"inoremap <expr><CR>  neocomplcache#smart_close_popup() . "\<CR>"
"inoremap <expr><BS>  neocomplcache#smart_close_popup() . "\<C-h>"

"" <CR>: close popup and save indent.
"inoremap <expr><CR> neocomplcache#smart_close_popup() . (&indentexpr != '' ? "\<C-f>\<CR>X\<BS>":"\<CR>")
"inoremap <expr><CR> pumvisible() ? neocomplcache#close_popup() : "\<CR>"



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"" <TAB>: completion.
"inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"




""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"どちらもtab保管できない?

" <TAB>: completion.
"inoremap <expr><TAB> pumvisible() ? "\<C-n>" : <SID>check_back_space() ? "\<TAB>" : "\<C-x>\<C-u>\<C-p>\<Down>"
"function! s:check_back_space()"{{{
"let col = col('.') - 1
"return !col || getline('.')[col - 1] =~ '\s'
"endfunction"}}}

"
"function InsertTabWrapper()
"    if pumvisible()
"        return "\<c-n>"
"    endif
"    let col = col('.') - 1
"    if !col || getline('.')[col - 1] !~ '\k\|<\|/'
"        return "\<tab>"
"    elseif exists('&omnifunc') && &omnifunc == ''
"        return "\<c-n>"
"    else
"        return "\<c-x>\<c-o>"
"    endif
"endfunction
"inoremap <tab> <c-r>=InsertTabWrapper()<cr>

"上とちょっと違う。
"omni
"function InsertTabWrapper()
"  if pumvisible()
"    return "\"
"  endif
"  let col = col('.') - 1
"  if !col || getline('.')[col -1] !~ '\k\|< \|/'
"    return "\"
"  elseif exists('&omnifunc') && &omnifunc == ''
"    return "\"
"  else
"    return "\\"
"  endif
"endfunction
"inoremap <tab> <c-r>=InsertTabWrapper()







""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"ファイル保存先を指定し、古いファイルを削除する
"	:Rename newfilename.txtとすることでファイル名を変更することができます。

command! -nargs=1 -complete=file Rename f <args>|call delete(expand('#'))



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""






""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""








""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""








""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""








""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""








""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""







